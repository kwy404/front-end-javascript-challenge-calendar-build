{"version":3,"sources":["actions/ui/month.js","helpers/calendar.js","selectors/ui/month.js","actions/ui/reminder.js","components/headerStyle.js","components/Header.js","components/calendar/MonthlyCalendarHeader.js","helpers/colors.js","components/shared/prop-types/date.js","selectors/ui/calendar.js","selectors/dates.js","selectors/reminders.js","components/calendar/MonthlyCalendarDate.js","components/calendar/styleMonthCalendar.js","components/calendar/MonthlyCalendarGrid.js","components/task/style.js","components/task/index.js","components/calendar/colorsTask.js","components/calendar/hoursTask.js","components/calendar/MonthlyCalendar.js","selectors/ui/reminder.js","components/icons/XIcon.js","components/shared/modal/ModalHeader.js","components/shared/modal/ModalBackdrop.js","components/shared/modal/ModalResponsive.js","components/shared/forms/FormTextInput.js","components/shared/forms/FormDatePicker.js","components/shared/forms/FormErrorMessage.js","components/shared/forms/FormLabel.js","components/shared/forms/FormFieldset.js","components/shared/buttons/BaseButton.js","components/shared/forms/FormActions.js","components/icons/CheckIcon.js","components/shared/forms/FormTimePicker.js","components/reminders/ReminderColorCircle.js","components/icons/ExpandIcon.js","components/reminders/ReminderColorPickerItem.js","components/reminders/ReminderColorPicker.js","actions/ui/forecast.js","components/shared/prop-types/reminder.js","selectors/ui/forecast.js","components/icons/ChevronsUpIcon.js","components/icons/ChevronsDownIcon.js","components/reminders/forecast/ReminderForecast.js","components/reminders/forecast/ReminderForecastContainer.js","components/reminders/ReminderForm.js","components/reminders/ReminderModal.js","components/reminders/ReminderContainer.js","components/style.js","components/App.js","reportWebVitals.js","reducers/ui/index.js","reducers/ui/month.js","reducers/ui/reminder.js","reducers/ui/forecast.js","actions/dates.js","reducers/dates.js","actions/reminders.js","reducers/index.js","reducers/reminders.js","config/endpoints.js","config/keys.js","infra/api/forecast.js","sagas/ui/forecast.js","helpers/uuid.js","sagas/ui/reminder.js","sagas/index.js","index.js"],"names":["SET_MONTH","MONTH_FORMAT","DATE_FORMAT","TIME_FORMAT","weekendNumbers","Object","freeze","toLocalWeekdayNumber","isoWeekday","dateTimeToDateString","dateTime","toFormat","locale","dateTimeToTimeString","toLocaleString","DateTime","TIME_24_SIMPLE","getMonth","state","ui","month","getDisplayMonthAndYear","createSelector","monthString","fromFormat","year","NEW_REMINDER","EDIT_REMINDER","SUBMIT_REMINDER","OPEN_REMINDER","CLOSE_REMINDER","newReminder","initialDate","type","payload","editReminder","reminder","submitReminder","openReminder","closeReminder","header","styled","center","div","left","logo","date","flex","Date","useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","connect","dispatch","bindActionCreators","index","classes","className","Tooltip","title","IconButton","size","getDay","long","narrow","short","getUTCDate","Button","style","fontWeight","textTransform","variant","color","MonthlyCalendarHeader","weekDays","map","weekDay","i","placement","opacity","DEFAULT_COLOR","ALL_COLORS","getBackgroundColor","PropTypes","shape","key","string","isRequired","text","trailing","bool","isWeekend","id","description","oneOf","number","displayTime","city","getMonthlyCalendarGrid","dateString","monthInterval","Interval","fromDateTimes","startOf","endOf","firstWeekOffset","start","weekday","lastWeekOffset","end","calendarInterval","minus","days","plus","totalDays","count","Array","fill","_","startOffset","day","hasSame","includes","getMonthlyCalendarGridHelper","getFormattedDateReminders","props","dates","dateId","reminders","dateReminders","reduce","formatted","reminderId","dateMillis","fromMillis","TIME_SIMPLE","sort","a","b","ownProps","setDate","dateT","diaAtual","getDate","mesAtual","split","parseInt","onClick","container","filled","calendarContainer","calendar","buttonAdd","grid","row","main","time","inline","times","presentation","none","data","h2","presentati","tarefa","menuItem","Opacity","MonthlyCalendarGrid","datas","base","maximo","resultado","grupo","indice","length","undefined","push","separar","atual","Draggable","Modal","span","TaskModal","useState","task","setTask","open","handle","onSubmit","e","preventDefault","setOpenModal","editTaskModal","submitForm","noValidate","autoComplete","TextField","onChange","event","target","value","width","label","colors","c","n","hoursT","config","Info","weekdaysFormat","weekDayIndex","DAYS_IN_A_WEEK","slice","getWeekdaysDescriptions","document","addEventListener","localS","window","localStorage","getItem","JSON","parse","arrayDate","toLocaleDateString","horasA","getHours","tasks","setHoursI","openModal","editT","setEditTask","setMenuItem","editTask","taskA","taskAtual","find","saveLocalStorage","setTimeout","taskB","stringify","setItem","parseTime","timeInt","minutes","substring","height","viewBox","d","item","marginTop","cursor","backgroundColor","oldTask","newTask","indexT","onAuxClickCapture","obj","x","clientX","y","clientY","down","screen","availHeight","openTaskMenu","top","found","indexOf","old","splice","position","textAlign","startIcon","trim","getFormattedReminder","millisToDateTimeStrings","PlusIcon","svgClassName","xmlns","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ModalHeader","children","onClose","XIcon","ModalBackdrop","handleClick","ref","current","createRef","this","Component","ModalResponsive","FormTextInput","field","form","touched","errors","hasError","name","Boolean","classNames","FormDatePicker","FormErrorMessage","FormLabel","htmlFor","FormFieldset","BaseButton","FormActions","CheckIcon","FormTimePicker","ReminderColorCircle","colorName","fillRule","clipRule","ReminderColorPickerItem","tabIndex","role","ReminderColorPicker","toggleOpen","setState","prevState","close","handleOutsideClick","contains","handleSelectColor","renderColorList","filter","removeEventListener","ExpandIcon","GET_FORECAST","SET_FORECAST","RESET_FORECAST","getForecast","resetForecast","forecast","ChevronsUpIcon","ChevronsDownIcon","ReminderForecast","hasForecast","maxTemp","toFixed","minTemp","condition","icon","alt","src","ReminderForecastContainer","isValid","names","formik","keys","every","error","Formik","getFieldValue","getAllValues","prevProps","prevValues","currentValues","info","console","String","values","WithFormik","forecastUISelectors","forecastUIActions","ReminderSchema","Yup","max","required","matches","ReminderForm","getInitialValues","handleSubmit","initialValues","validationSchema","component","placeholder","as","ReminderModal","isNew","mainApp","setNavigationBarHeightCSSVariable","vh","innerHeight","documentElement","setProperty","home","relative","App","local","Header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","errorMessage","SET_DATE_REMINDER","setDateReminder","filterDateReminders","reminderIdToExclude","filtered","existing","SET_REMINDER","setReminder","entry","from","Set","FORECAST_API_BASE_URL","process","REACT_APP_FORECAST_API_BASE_URL","FORECAST_API_KEY","REACT_APP_FORECAST_API_KEY","forecastAxiosClient","axios","create","baseURL","forecastError","handleApiError","response","message","getResponseErrorMessage","request","statusText","handleForecastResponse","forecasts","forecastday","isArray","Number","maxtemp_f","mintemp_f","avgTemp","avgtemp_f","code","forecastSuccess","getCityForecastForDate","diff","get","params","q","Math","ceil","isCancel","raceWithResetForecast","getForecastDebounced","watchGetForecast","effect","race","result","reset","take","call","forecastApi","put","delay","cancel","fork","generateUUID","random","toString","watchNewReminder","watchEditReminder","watchSubmitReminder","reminderUIActions","apply","initialDateTime","parsed","set","toMillis","reminderToSet","timeString","dateReminder","takeEvery","keepAlive","rootSaga","sagas","all","saga","spawn","groupCollapsed","groupEnd","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e8b7a842.chunk.js","sourcesContent":["export const SET_MONTH = 'UI/SET_MONTH';\r\n\r\nexport function setMonth(month) {\r\n  return {\r\n    type: SET_MONTH,\r\n    payload: month,\r\n  };\r\n}\r\n","import { DateTime, Info, Interval } from 'luxon';\r\n\r\nexport const DAYS_IN_A_WEEK = 7;\r\nexport const MONTH_FORMAT = 'yyyy-MM';\r\nexport const DATE_FORMAT = 'yyyy-MM-dd';\r\nexport const TIME_FORMAT = 'hh:mm';\r\n\r\nexport const DATE_REGEX = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\r\nexport const TIME_REGEX = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\r\n\r\nconst SATURDAY_NUMBER = 7;\r\nconst SUNDAY_NUMBER = 1;\r\nconst weekendNumbers = Object.freeze([SATURDAY_NUMBER, SUNDAY_NUMBER]);\r\n\r\n/**\r\n * Convert the ISO week number to local week number.\r\n * That will make the week start from Sunday.\r\n * @param {number} isoWeekday ISO week number: from `1 - Monday` to `7 - Sunday`.\r\n */\r\nexport function toLocalWeekdayNumber(isoWeekday) {\r\n  return (isoWeekday % DAYS_IN_A_WEEK) + 1;\r\n}\r\n\r\n/**\r\n * Returns long, short, and narrow weekdays descriptions for the current `APP_LOCALE`.\r\n */\r\nexport function getWeekdaysDescriptions() {\r\n  const config = { locale: `BR` };\r\n  const long = Info.weekdaysFormat('long', config);\r\n  const short = Info.weekdaysFormat('short', config);\r\n  const narrow = Info.weekdaysFormat('narrow', config);\r\n\r\n  const weekDays = Array(DAYS_IN_A_WEEK)\r\n    .fill(null)\r\n    .map((_, weekDayIndex) => {\r\n      return {\r\n        long: long[weekDayIndex],\r\n        short: short[weekDayIndex],\r\n        narrow: narrow[weekDayIndex],\r\n      };\r\n    });\r\n\r\n  // luxon only return ISO weekdays order,\r\n  // and we want Sunday to be the first day.\r\n  return [\r\n    weekDays[DAYS_IN_A_WEEK - 1],\r\n    ...weekDays.slice(0, DAYS_IN_A_WEEK - 1),\r\n  ];\r\n}\r\n\r\n/**\r\n * Returns an array for the passed date's month with trailing dates for next/previous months.\r\n * The array represents a calendar that starts on Sunday and ends on Saturday.\r\n * @param {string} dateString The date (format: `yyyy-MM`) to generate the grid from.\r\n */\r\nexport function getMonthlyCalendarGrid(dateString) {\r\n  const month = DateTime.fromFormat(dateString, MONTH_FORMAT);\r\n\r\n  // Get the interval for the provided month\r\n  const monthInterval = Interval.fromDateTimes(\r\n    month.startOf('month'),\r\n    month.endOf('month')\r\n  );\r\n\r\n  // Get offsets for trailing months\r\n  const firstWeekOffset = toLocalWeekdayNumber(monthInterval.start.weekday) - 1;\r\n  const lastWeekOffset =\r\n    DAYS_IN_A_WEEK - toLocalWeekdayNumber(monthInterval.end.weekday);\r\n\r\n  // Get calendar with trailing intervals\r\n  const calendarInterval = Interval.fromDateTimes(\r\n    monthInterval.start.minus({\r\n      days: firstWeekOffset > 0 ? firstWeekOffset : 0,\r\n    }),\r\n    monthInterval.end.plus({ days: lastWeekOffset })\r\n  );\r\n\r\n  // Map the interval to an ordered dates array that represents a calendars month.\r\n  const totalDays = calendarInterval.count('days');\r\n  const start = calendarInterval.start;\r\n  return Array(totalDays)\r\n    .fill(null)\r\n    .map((_, startOffset) => {\r\n      const date = start.plus({ days: startOffset });\r\n      return {\r\n        key: date.toFormat(DATE_FORMAT),\r\n        text: date.toLocaleString({ locale: `BR`, day: 'numeric' }),\r\n        trailing: !month.hasSame(date, 'month'),\r\n        isWeekend: weekendNumbers.includes(toLocalWeekdayNumber(date.weekday)),\r\n      };\r\n    });\r\n}\r\n\r\n/**\r\n * Returns a localized formatted month and year string.\r\n * @param {string} monthString The month to get the key from.\r\n */\r\nexport function getDisplayMonthAndYear(monthString) {\r\n  return DateTime.fromFormat(monthString, MONTH_FORMAT).toLocaleString({\r\n    locale: `BR`,\r\n    year: 'numeric',\r\n    month: 'long',\r\n  });\r\n}\r\n\r\n/**\r\n * Returns a date string representation of the provided DateTime.\r\n * @param {DateTime} dateTime\r\n */\r\nexport function dateTimeToDateString(dateTime) {\r\n  return dateTime.toFormat(DATE_FORMAT, { locale: `BR` });\r\n}\r\n\r\n/**\r\n * Returns a time string representation of the provided DateTime.\r\n * @param {DateTime} date\r\n */\r\nexport function dateTimeToTimeString(dateTime) {\r\n  return dateTime.toLocaleString(DateTime.TIME_24_SIMPLE);\r\n}\r\n\r\n/**\r\n * Returns an object with keys `date`, and `time` from milliseconds of a date.\r\n * @param {number} dateMillis\r\n */\r\nexport function millisToDateTimeStrings(dateMillis) {\r\n  const dateTime = DateTime.fromMillis(dateMillis);\r\n\r\n  return {\r\n    date: dateTimeToDateString(dateTime),\r\n    time: dateTimeToTimeString(dateTime),\r\n  };\r\n}\r\n\r\n/**\r\n * Returns total milliseconds from a date and time.\r\n * @param {string} dateString\r\n * @param {string} timeString\r\n */\r\nexport function dateTimeStringsToMillis(dateString, timeString) {\r\n  return DateTime.fromFormat(\r\n    `${dateString} ${timeString}`,\r\n    `${DATE_FORMAT} ${TIME_FORMAT}`,\r\n    { locale: `BR` }\r\n  ).toMillis();\r\n}\r\n\r\nexport function getDisplayTimeFromMillis(dateMillis) {\r\n  return DateTime.fromMillis(dateMillis).toLocaleString({\r\n    ...DateTime.TIME_SIMPLE,\r\n    locale: `BR`,\r\n  });\r\n}\r\n","import { createSelector } from 'reselect';\r\nimport { getDisplayMonthAndYear as getDisplayMonthAndYearHelper } from '../../helpers/calendar';\r\n\r\nexport const getMonth = (state) => state.ui.month;\r\n\r\nexport const getDisplayMonthAndYear = createSelector([getMonth], (month) =>\r\n  month !== null ? getDisplayMonthAndYearHelper(month) : ''\r\n);\r\n","export const NEW_REMINDER = 'UI/NEW_REMINDER';\r\nexport const EDIT_REMINDER = 'UI/EDIT_REMINDER';\r\nexport const SUBMIT_REMINDER = 'UI/SUBMIT_REMINDER';\r\n\r\nexport const OPEN_REMINDER = 'UI/OPEN_REMINDER';\r\nexport const CLOSE_REMINDER = 'UI/CLOSE_REMINDER';\r\n\r\nexport function newReminder(initialDate) {\r\n  return {\r\n    type: NEW_REMINDER,\r\n    payload: initialDate,\r\n  };\r\n}\r\n\r\nexport function editReminder(reminder) {\r\n  return {\r\n    type: EDIT_REMINDER,\r\n    payload: reminder,\r\n  };\r\n}\r\n\r\nexport function submitReminder(reminder) {\r\n  return {\r\n    type: SUBMIT_REMINDER,\r\n    payload: reminder,\r\n  };\r\n}\r\n\r\nexport function openReminder(reminder) {\r\n  return {\r\n    type: OPEN_REMINDER,\r\n    payload: reminder,\r\n  };\r\n}\r\n\r\nexport function closeReminder() {\r\n  return {\r\n    type: CLOSE_REMINDER,\r\n  };\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const header = styled.header`\r\n    background-color: rgba(255,255,255,1);\r\n    font: 13px/27px Roboto,RobotoDraft,Arial,sans-serif;\r\n    z-index: 986;\r\n    color: black;\r\n    min-width: 320px;\r\n    position: relative;\r\n    -webkit-transition: box-shadow 250ms;\r\n    transition: box-shadow 250ms;\r\n    padding: 8px;\r\n`\r\n\r\nheader.center = styled.div`\r\n    padding: 8px;\r\n    -webkit-transition: background-color .4s;\r\n    transition: background-color .4s;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n    width: 100%;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-box-pack: space-between;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    min-width: -webkit-min-content;\r\n    min-width: min-content;\r\n`\r\n\r\nheader.center.left = styled.div`\r\n    padding-right: 30px;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-flex: 1 0 auto;\r\n    flex: 1 0 auto;\r\n`\r\n\r\nheader.center.left.logo = styled.div`\r\n    -webkit-box-align: center;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 2px;\r\n    -webkit-user-select: none;\r\n    span{\r\n        text-decoration: none;\r\n        padding-left: 4px;\r\n        color: #5f6368 !important;\r\n        opacity: 1;\r\n        display: inline-block;\r\n        font-family: 'Product Sans',Arial,sans-serif;\r\n        font-size: 22px;\r\n        line-height: 24px;\r\n        padding-left: 8px;\r\n        position: relative;\r\n        top: -1.5px;\r\n        vertical-align: middle;\r\n        color: inherit;\r\n        opacity: 1;\r\n        text-rendering: optimizeLegibility;\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n`\r\n\r\nheader.center.date = styled.div`\r\n    -webkit-box-pack: space-between;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    -webkit-flex: 1 1 100%;\r\n    flex: 1 1 100%;\r\n    color: black;\r\n    min-width: 320px;\r\n    position: relative;\r\n    -webkit-transition: box-shadow 250ms;\r\n    transition: box-shadow 250ms;\r\n`\r\n\r\nheader.center.date.center = styled.div`\r\n    min-width: initial!important;\r\n    min-width: auto!important;\r\n    text-align: right;\r\n    line-height: 0;\r\n    -webkit-user-select: none;\r\n`\r\n\r\nheader.center.date.center.flex = styled.div`\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    line-height: normal;\r\n    margin-left: 8px;\r\n    width: 100%;\r\n`\r\n\r\nheader.center.date.center.flex.date = styled.div`\r\n    display: inline-block;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    line-height: normal;\r\n    margin-left: 8px;\r\n    width: 100%;\r\n`","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { newReminder } from '../actions/ui/reminder';\r\nimport { getDisplayMonthAndYear } from '../selectors/ui/month';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as s from './headerStyle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport Button from '@material-ui/core/Button';\r\nconst date = new Date()\r\n\r\nconst getDay = index => {\r\n  const days = [\r\n    { long: 'Domingo', narrow: 'D', short: 'Dom' },\r\n    { long: 'Segunda-feira', narrow: 'S', short: 'Seg' },\r\n    { long: 'Terça-feira', narrow: 'T', short: 'Ter' },\r\n    { long: 'Quarta-feira', narrow: 'Q', short: 'Qua' },\r\n    { long: 'Quinta-feira', narrow: 'Q', short: 'Qui' },\r\n    { long: 'Sexta-feira', narrow: 'S', short: 'Sex' },\r\n    { long: 'Sábado', narrow: 'S', short: 'Sáb' },\r\n  ]\r\n  return days[index].long\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction AppHeader({ month, newReminder }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <s.header>\r\n      <s.header.center className=\"flex_1\">\r\n        <s.header.center.left className=\"flex_1\">\r\n          <Tooltip title=\"Menu principal\">\r\n            <IconButton aria-label=\"Gaveta principal\" className={classes} size=\"large\">\r\n              <DehazeIcon/>\r\n            </IconButton>\r\n          </Tooltip>\r\n          <s.header.center.left.logo>\r\n            <span>Agenda</span>\r\n          </s.header.center.left.logo>\r\n          <s.header.center.date className=\"flex_1\">\r\n            <s.header.center.date.center className=\"flex_1\">\r\n              <s.header.center.date.center.flex className=\"flex_1\">\r\n                <s.header.center.date.center.flex.date className=\"flex_1\">\r\n                  <Tooltip title={`${getDay(date.getDay())}, ${date.getUTCDate()} ${month}`}>\r\n                    <Button \r\n                    style={{\r\n                      left: `70px`,\r\n                      fontWeight: `500`,\r\n                      textTransform: `none`\r\n                    }}\r\n                    variant=\"outlined\" color=\"default\">\r\n                      Hoje\r\n                    </Button>\r\n                  </Tooltip>\r\n                </s.header.center.date.center.flex.date>\r\n              </s.header.center.date.center.flex>\r\n            </s.header.center.date.center>\r\n          </s.header.center.date>\r\n        </s.header.center.left>\r\n      </s.header.center>\r\n    </s.header>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    month: getDisplayMonthAndYear(state),\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ newReminder }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppHeader);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction MonthlyCalendarHeader({ weekDays }) {\r\n  return (\r\n    <>\r\n      {weekDays.map((weekDay, i) => (\r\n        <Tooltip \r\n        placement=\"top\"\r\n        title={weekDay.long}>\r\n        <span\r\n          key={weekDay} \r\n          key={i}\r\n        >\r\n       \r\n          { weekDay.narrow || <span style={{opacity: `0`}}>*</span> }\r\n        </span>\r\n        </Tooltip>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nMonthlyCalendarHeader.propTypes = {\r\n  weekDays: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      long: PropTypes.string.isRequired,\r\n      short: PropTypes.string.isRequired,\r\n      narrow: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n\r\nexport default MonthlyCalendarHeader;\r\n","export const DEFAULT_COLOR = 'indigo-600';\r\nexport const GRASS_GREEN = 'green-600';\r\nexport const RED_DANGER = 'red-500';\r\nexport const BRIGHT_PINK = 'pink-600';\r\nexport const SWEET_PURPLE = 'purple-500';\r\nexport const BRIGHT_YELLOW = 'yellow-400';\r\nexport const SKY_BLUE = 'blue-500';\r\n\r\nexport const ALL_COLORS = Object.freeze([\r\n  DEFAULT_COLOR,\r\n  GRASS_GREEN,\r\n  RED_DANGER,\r\n  BRIGHT_PINK,\r\n  SWEET_PURPLE,\r\n  BRIGHT_YELLOW,\r\n  SKY_BLUE,\r\n]);\r\n\r\nexport function getBackgroundColor(color) {\r\n  return `bg-${color}`;\r\n}\r\n\r\nexport function getTextColor(color) {\r\n  return `text-${color}`;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { ALL_COLORS } from '../../../helpers/colors';\r\n\r\nexport const DatePropType = PropTypes.shape({\r\n  key: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  trailing: PropTypes.bool.isRequired,\r\n  isWeekend: PropTypes.bool.isRequired,\r\n});\r\n\r\nexport const DateReminderPropType = PropTypes.shape({\r\n  id: PropTypes.string,\r\n  description: PropTypes.string.isRequired,\r\n  color: PropTypes.oneOf(ALL_COLORS).isRequired,\r\n  dateTime: PropTypes.number.isRequired,\r\n  displayTime: PropTypes.string.isRequired,\r\n  city: PropTypes.string.isRequired,\r\n});\r\n","import { createSelector } from 'reselect';\r\nimport {\r\n  getDisplayTimeFromMillis,\r\n  getMonthlyCalendarGrid as getMonthlyCalendarGridHelper,\r\n} from '../../helpers/calendar';\r\nimport { getDateReminders } from '../dates';\r\nimport { getReminders } from '../reminders';\r\nimport { getMonth } from './month';\r\n\r\nexport const getMonthlyCalendarGrid = createSelector([getMonth], (month) => {\r\n  return month !== null ? getMonthlyCalendarGridHelper(month) : [];\r\n});\r\n\r\nexport const getFormattedDateReminders = createSelector(\r\n  [getDateReminders, getReminders],\r\n  (dateReminders, reminders) => {\r\n    if (!dateReminders || !reminders) return [];\r\n\r\n    return dateReminders\r\n      .reduce((formatted, reminderId) => {\r\n        const reminder = reminders[reminderId];\r\n        return reminder\r\n          ? [\r\n              ...formatted,\r\n              {\r\n                ...reminder,\r\n                displayTime: getDisplayTimeFromMillis(reminder.dateTime),\r\n              },\r\n            ]\r\n          : formatted;\r\n      }, [])\r\n      .sort((a, b) => a.dateTime - b.dateTime);\r\n  }\r\n);\r\n","export const getDateReminders = (state, props) =>\r\n  state.dates?.[props.dateId]?.reminders;\r\n","export const getReminders = (state) => state.reminders;\r\n","import React, { setState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { DatePropType, DateReminderPropType } from '../shared/prop-types/date';\r\nimport { getFormattedDateReminders } from '../../selectors/ui/calendar';\r\nimport { editReminder, newReminder } from '../../actions/ui/reminder';\r\nimport MonthlyCalendarDateReminder from './MonthlyCalendarDateReminder';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction MonthlyCalendarDate({ date, reminders, editReminder, newReminder, setDate, dateT }) {\r\n  const diaAtual = new Date().getDate()\r\n  const mesAtual = new Date().getMonth() + 1\r\n  return (\r\n    <Tooltip \r\n      placement=\"top\"\r\n      title={`${date.key.split(\"-\")[2]}/${date.key.split(\"-\")[1]}/${date.key.split(\"-\")[0]}`}>\r\n      <span\r\n        style={{\r\n          opacity: date.trailing\r\n          || parseInt(date.key.split(\"-\")[2]) < diaAtual && mesAtual >= parseInt(date.key.split(\"-\")[1])\r\n          ? `0.6` : `1`\r\n        }}\r\n        onClick={() => \r\n          {\r\n            if(parseInt(date.key.split(\"-\")[2]) < diaAtual && mesAtual >= parseInt(date.key.split(\"-\")[1])){\r\n              return\r\n            }\r\n            setDate(date.key)\r\n          }}\r\n        className={`${(dateT == date.key ? 'active' : '')}`}\r\n        key={date.key}\r\n      >\r\n      <div className=\"hover\">\r\n        {date.text}\r\n      </div>\r\n    </span>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nMonthlyCalendarDate.propTypes = {\r\n  date: DatePropType.isRequired,\r\n  dateT: PropTypes.string.isRequired,\r\n  setDate: PropTypes.func.isRequired,\r\n  reminders: PropTypes.arrayOf(DateReminderPropType.isRequired).isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    reminders: getFormattedDateReminders(state, { dateId: ownProps.date.key }),\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ editReminder, newReminder }, dispatch);\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MonthlyCalendarDate);\r\n","import styled from \"styled-components\";\r\n\r\nexport const container = styled.div`\r\n    border-top: #dadce0 1px solid;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100vh - 64px);\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n`\r\n\r\ncontainer.left = styled.div`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-box-flex: none;\r\n    -webkit-flex: none;\r\n    flex: none;\r\n    -webkit-flex-direction: column;\r\n    flex-direction: column;\r\n    width: 256px;\r\n    overflow: hidden;\r\n    position: relative;\r\n`\r\n\r\ncontainer.left.filled = styled.div`\r\n    height: 84px;\r\n    -webkit-flex-shrink: 0;\r\n    flex-shrink: 0;\r\n`\r\n\r\ncontainer.left.calendarContainer = styled.div`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-box-flex: 1;\r\n    box-flex: 1;\r\n    -webkit-flex-grow: 1;\r\n    flex-grow: 1;\r\n    -webkit-flex-shrink: 1;\r\n    flex-shrink: 1;\r\n    -webkit-flex-direction: column;\r\n    flex-direction: column;\r\n    overflow-x: hidden;\r\n    overflow-y: scroll;\r\n    ::before{\r\n        content: \"\";\r\n        height: 4px;\r\n        position: absolute;\r\n        top: 84px;\r\n        -webkit-transition: box-shadow 100ms cubic-bezier(0.4,0.0,0.2,1);\r\n        transition: box-shadow 100ms cubic-bezier(0.4,0.0,0.2,1);\r\n        width: 248px;\r\n        z-index: 1;\r\n    }\r\n`\r\n\r\ncontainer.left.calendarContainer.calendar = styled.div`\r\n    -webkit-box-flex: 0;\r\n    box-flex: 0;\r\n    -webkit-flex-grow: 0;\r\n    flex-grow: 0;\r\n    -webkit-flex-shrink: 0;\r\n    flex-shrink: 0;\r\n    height: 224px;\r\n    padding-top: 0;\r\n    margin-top: -5px;\r\n`\r\ncontainer.left.calendarContainer.calendar.container = styled.div`\r\n    padding: 0 14px 16px 19px;\r\n    -webkit-user-select: none;\r\n    position: relative;\r\n`\r\n\r\ncontainer.left.buttonAdd = styled.div`\r\n    position: absolute;\r\n    left: 11px;\r\n    top: 11px;\r\n    -webkit-transition: left,top 300ms linear;\r\n    transition: left,top 300ms linear;\r\n    z-index: 506;\r\n    -webkit-border-radius: 24px;\r\n    border-radius: 24px;\r\n    height: 48px;\r\n    margin-top: 4px;\r\n    width: 110px;\r\n    -webkit-box-shadow: 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 2px 1px -1px rgb(0 0 0 / 12%), 0px 1px 3px 0px rgb(0 0 0 / 20%);\r\n    box-shadow: 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 2px 1px -1px rgb(0 0 0 / 12%), 0px 1px 3px 0px rgb(0 0 0 / 20%);\r\n    border-top-left-radius: 28px;\r\n    border-top-right-radius: 28px;\r\n    border-bottom-right-radius: 28px;\r\n    border-bottom-left-radius: 28px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    :hover{\r\n        background: #eee;\r\n        -webkit-box-shadow: 0 2px 3px 0 rgb(60 64 67 / 30%), 0 6px 10px 4px rgb(60 64 67 / 15%);\r\n        box-shadow: 0 2px 3px 0 rgb(60 64 67 / 30%), 0 6px 10px 4px rgb(60 64 67 / 15%);\r\n    }\r\n    span{\r\n        font-weight: 600;\r\n        position: absolute;\r\n        left: 60%;\r\n        transform: translate(-50%);\r\n        top: 29%;\r\n    }\r\n    svg{\r\n        margin: 6px;\r\n        position: absolute;\r\n    }\r\n`\r\n\r\ncontainer.left.calendarContainer.calendar.container.header = styled.div`\r\n    height: 32px;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: #3c4043;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    margin-left: 4px;\r\n    margin-right: 3px;\r\n    span{\r\n        -webkit-box-flex: 1;\r\n        box-flex: 1;\r\n        -webkit-flex-grow: 1;\r\n        flex-grow: 1;\r\n        padding-left: 5px;\r\n        font-size: 14px;\r\n        letter-spacing: .25px;\r\n        line-height: 20px;\r\n        color: #3c4043;\r\n        font-weight: 600;\r\n        :first-letter{\r\n            text-transform: uppercase;\r\n        }\r\n    }\r\n`\r\n\r\ncontainer.left.calendarContainer.calendar.container.grid = styled.div`\r\n    display: table;\r\n    table-layout: fixed;\r\n    width: 100%;\r\n    text-align: center;\r\n    padding: 0 14px 16px 0px;\r\n    -webkit-user-select: none;\r\n    position: relative;\r\n    margin: 7px -20px;\r\n`\r\n\r\ncontainer.left.calendarContainer.calendar.container.grid.row = styled.div`\r\n    display: table-row;\r\n    height: 28px;\r\n    display: table;\r\n    table-layout: fixed;\r\n    width: 100%;\r\n    text-align: center;\r\n    padding: 0 0px 16px 11px;\r\n    -webkit-user-select: none;\r\n    position: relative;\r\n    left: 10px;\r\n    span{\r\n        display: table-cell;\r\n        font-size: 10px;\r\n        font-weight: 500;\r\n        vertical-align: middle;\r\n        color: #70757a;\r\n        cursor: pointer;\r\n        margin-left: 4px;\r\n        :hover .hover{\r\n            color: #70757a;\r\n            background: #ddd;\r\n        }\r\n    }\r\n    .active .hover{\r\n        background: #1a73e8 !important;\r\n        color: white !important;\r\n    }\r\n    .hover{\r\n        color: #70757a;\r\n        background: transparent;\r\n        position: absolute;\r\n        width: 24px;\r\n        height: 24px;\r\n        line-height: 24px;\r\n        margin: auto;\r\n        -webkit-border-radius: 50%;\r\n        border-radius: 50%;\r\n        position: relative;\r\n        transition: background-color 100ms linear;\r\n        font-weight: 500;\r\n        -webkit-border-radius: 50%;\r\n        border-radius: 50%;\r\n    }\r\n`\r\n\r\ncontainer.center = styled.div`\r\n    -webkit-box-flex: 1 1 auto;\r\n    -webkit-flex: 1 1 auto;\r\n    flex: 1 1 auto;\r\n    overflow: hidden;\r\n    position: relative;\r\n`\r\n\r\ncontainer.center.main = styled.div`\r\n    overflow: hidden;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    overflow-y: hidden;\r\n    outline: none;\r\n`\r\n\r\ncontainer.center.main.grid = styled.div`\r\n    background-color: #fff;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    flex-direction: column;\r\n    position: relative;\r\n    height: calc(100vh - 27px);\r\n`\r\n\r\ncontainer.center.main.grid.header = styled.div`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-box-flex: none;\r\n    -webkit-flex: none;\r\n    flex: none;\r\n    overflow: auto;\r\n    height: calc(100% - 74px);\r\n    right: 8px;\r\n    position: relative;\r\n`\r\n\r\ncontainer.center.main.grid.header.time = styled.div`\r\n    white-space: nowrap;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-box-flex: none;\r\n    -webkit-flex: none;\r\n    flex: none;\r\n    -webkit-flex-direction: column;\r\n    flex-direction: column;\r\n`\r\n\r\ncontainer.center.main.grid.header.time.flex = styled.div`\r\n    -webkit-box-flex: 1;\r\n    -webkit-flex: 1;\r\n    flex: 1;\r\n    margin-left: 1px;\r\n    min-width: 40px;\r\n    position: relative;\r\n    height: 100%;\r\n`\r\n\r\ncontainer.center.main.grid.header.time.flex.inline = styled.div`\r\n    margin-left: 0;\r\n    display: inline-block;\r\n    display: block;\r\n    overflow-y: hidden;\r\n    height: 0;\r\n    max-width: 80px;\r\n`\r\n\r\nexport const time = styled.div`\r\n    background-color: #fff;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    display: table-cell;\r\n    line-height: 24px;\r\n    min-height: 24px;\r\n    overflow: hidden;\r\n    padding-right: 1px;\r\n    position: relative;\r\n    text-align: center;\r\n    top: 64px;\r\n    vertical-align: middle;\r\n    .time{\r\n        color: #70757a;\r\n        font-size: 10px;\r\n        -webkit-font-smoothing: subpixel-antialiased;\r\n    }\r\n`\r\n\r\ntime.times = styled.div`\r\n    display: block;\r\n    overflow-y: hidden;\r\n    height: 0;\r\n    max-width: 80px;\r\n    position: relative;\r\n    height: 100%;\r\n`\r\n\r\ntime.times.time = styled.div`\r\n    user-select: none;\r\n    position: relative;\r\n    height: 48px;\r\n    padding-right: 8px;\r\n    text-align: right;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    min-width: 48px;\r\n    padding: 4px;\r\n    margin-left: 3px;\r\n    white-space: nowrap;\r\n    color: #70757a;\r\n    font-size: 10px;\r\n    -webkit-font-smoothing: subpixel-antialiased;\r\n    span{\r\n        display: block;\r\n        position: relative;\r\n        top: -6px;\r\n        color: #70757a;\r\n        font-size: 10px;\r\n        -webkit-font-smoothing: subpixel-antialiased;\r\n    }\r\n`\r\n\r\nexport const presentation = styled.div`\r\n    margin-left: -1px;\r\n    -webkit-box-flex: 1 1 auto;\r\n    -webkit-flex: 1 1 auto;\r\n    flex: 1 1 auto;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    position: relative;\r\n`\r\n\r\npresentation.row = styled.div`\r\n    height: 84px;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-box-flex: none;\r\n    -webkit-flex: none;\r\n    flex: none;\r\n    overflow: hidden;\r\n`\r\n\r\npresentation.grid = styled.div`\r\n    background-color: #fff;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    flex-direction: column;\r\n    position: relative;\r\n`\r\n\r\npresentation.row.presentation = styled.div`\r\n    margin-left: -1px;\r\n    -webkit-box-flex: 1 1 auto;\r\n    -webkit-flex: 1 1 auto;\r\n    flex: 1 1 auto;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    position: relative;\r\n`\r\n\r\npresentation.row.presentation.none = styled.div`\r\n    width: 9px;\r\n    min-width: 9px;\r\n`\r\n\r\npresentation.row.presentation.date = styled.div`\r\n    margin-left: 0px;\r\n    top: 65px;\r\n    position: fixed;\r\n    background: #fff;\r\n    z-index: 10;\r\n    -webkit-transform: scale(1);\r\n    -webkit-box-flex: 1 0 auto;\r\n    -webkit-flex: 1 0 auto;\r\n    flex: 1 0 auto;\r\n    width: 129px;\r\n    min-width: 129px;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    z-index: 3;\r\n    overflow: hidden;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-box-flex: 1 1 0%;\r\n    -webkit-flex: 1 1 0%;\r\n    flex: 1 1 0%;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    outline: none;\r\n    width: 100% !important;\r\n    border-bottom: 1px solid #d1ccd7;\r\n    padding-bottom: 4px;\r\n`\r\n\r\npresentation.row.presentation.date.data = styled.h2`\r\n    font-weight: 400;\r\n    margin: 0;\r\n    text-align: center;\r\n    width: 46px;\r\n    user-select: none;\r\n    height: 88px;\r\n    .dayT{\r\n        color: #1a73e8;\r\n        line-height: 32px;\r\n        position: relative;\r\n        z-index: 3;\r\n        font-size: 11px;\r\n        font-weight: 500;\r\n        letter-spacing: 0.8px;\r\n        margin-left: 0;\r\n        margin-top: 8px;\r\n        text-indent: 0.8px;\r\n        text-transform: uppercase;\r\n    }\r\n    .day{\r\n        font-size: 25px;\r\n        letter-spacing: -2.5px;\r\n        text-indent: -2.5px;\r\n        font-variant: tabular-nums;\r\n        -webkit-font-feature-settings: \"tnum\" 1;\r\n        font-feature-settings: \"tnum\" 1;\r\n        background-color: #1a73e8;\r\n        color: white;\r\n        position: relative;\r\n        z-index: 3;\r\n        font-size: 26px;\r\n        letter-spacing: -2.6px;\r\n        text-indent: -2.6px;\r\n        font-variant: tabular-nums;\r\n        -webkit-font-feature-settings: \"tnum\" 1;\r\n        font-feature-settings: \"tnum\" 1;\r\n        -webkit-border-radius: 100%;\r\n        border-radius: 100%;\r\n        color: #fff;\r\n        font-family: 'Google Sans',Roboto,Arial,sans-serif;\r\n        line-height: 46px;\r\n        height: 46px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        margin-top: -8px;\r\n        width: 46px;\r\n        display: -webkit-box;\r\n        display: -webkit-flex;\r\n        display: flex;\r\n        -webkit-flex-direction: column;\r\n        flex-direction: column;\r\n        -webkit-justify-content: center;\r\n        justify-content: center;\r\n        font-weight: 400;\r\n        margin: 0;\r\n        text-align: center;\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nexport const presentati = styled.div`\r\n    z-index: 1;\r\n    -webkit-box-flex: 1 1 auto;\r\n    -webkit-flex: 1 1 auto;\r\n    flex: 1 1 auto;\r\n    overflow-x: auto;\r\n    overflow-y: scroll;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-align-items: flex-start;\r\n    align-items: flex-start;\r\n    height: auto;\r\n    width: calc(100vw - 265px);\r\n    position: relative;\r\n    top: -1140px;\r\n    overflow: hidden;\r\n    ::after{\r\n        content: '';\r\n        background: #dadce0;\r\n        position: fixed;\r\n        width: 1px;\r\n        margin-top: -1px;\r\n        top: 0px;\r\n        height: 100%;\r\n        z-index: 3;\r\n        margin-left: 56px;\r\n        pointer-events: none;\r\n    }\r\n`\r\n\r\npresentati.row = styled.div`\r\n    position: relative;\r\n    top: 82px;\r\n    height: 48px;\r\n    left: 32px;\r\n    ::after {\r\n        content: '';\r\n        border-bottom: #dadce0 1px solid;\r\n        position: absolute;\r\n        width: calc(100vw - 305px);\r\n        margin-top: -1px;\r\n        z-index: 3;\r\n        pointer-events: none;\r\n        height: 1px;\r\n    }\r\n    .cell{\r\n        position: absolute;\r\n        width: 100vw;\r\n        height: 48px;\r\n        margin-top: -19px;\r\n        :hover{\r\n            background: rgb(63 81 181 / 18%);\r\n            -webkit-box-shadow: 0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%), 0px 5px 5px -3px rgb(0 0 0 / 20%);\r\n            box-shadow: 0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%), 0px 5px 5px -3px rgb(0 0 0 / 20%);\r\n            -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n        }\r\n    }\r\n    .hoursA{\r\n        width: 100vw;\r\n        position: absolute;\r\n        background: #ea4335;\r\n        height: 2px;\r\n        z-index: 10;\r\n    }\r\n    .hoursA::after{\r\n        content: '';\r\n        background: #ea4335;\r\n        -webkit-border-radius: 50%;\r\n        border-radius: 50%;\r\n        content: \"\";\r\n        position: absolute;\r\n        height: 12px;\r\n        margin-left: -6.5px;\r\n        margin-top: -5px;\r\n        width: 12px;\r\n        z-index: 505;\r\n        float: left;\r\n        left: 0px;\r\n    }\r\n`\r\n\r\nexport const tarefa = styled.div`\r\n    :hover{\r\n        -webkit-box-shadow: 0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%), 0px 5px 5px -3px rgb(0 0 0 / 20%);\r\n         box-shadow: 0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%), 0px 5px 5px -3px rgb(0 0 0 / 20%);\r\n        -webkit-box-sizing: border-box;\r\n        box-sizing: border-box;\r\n    }\r\n    user-select: none;\r\n    border-radius: 6px;\r\n    position: absolute;\r\n    left: 26px;\r\n    top: -18px;\r\n    height: 46px;\r\n    z-index: 5;\r\n    background-color: rgb(3,155,229);\r\n    border-color: rgb(3,155,229);\r\n    width: 68vw;\r\n    span{\r\n        color: white;\r\n        padding: 10px;\r\n        margin-top: 5px;\r\n    }\r\n    p{\r\n        color: white;\r\n        margin-top: -2px;\r\n        margin-left: 10px;\r\n    }\r\n`\r\n\r\nexport const menuItem = styled.div`\r\n    width: 192px;\r\n    height: auto;\r\n    min-width: 192px;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    -webkit-overflow-scrolling: touch;\r\n    -webkit-transform: translateZ(0);\r\n    transform: translateZ(0);\r\n    -webkit-transition: max-width 0.2s cubic-bezier(0.0,0.0,0.2,1) ,max-height 0.2s cubic-bezier(0.0,0.0,0.2,1) ,opacity 0.1s linear;\r\n    transition: max-width 0.2s cubic-bezier(0.0,0.0,0.2,1) ,max-height 0.2s cubic-bezier(0.0,0.0,0.2,1) ,opacity 0.1s linear;\r\n    background: #ffffff;\r\n    border: 0;\r\n    -webkit-border-radius: 2px;\r\n    border-radius: 2px;\r\n    -webkit-box-shadow: 0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%), 0px 5px 5px -3px rgb(0 0 0 / 20%);\r\n    box-shadow: 0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%), 0px 5px 5px -3px rgb(0 0 0 / 20%);\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    max-height: 100%;\r\n    max-width: 100%;\r\n    opacity: 1;\r\n    outline: 1px solid transparent;\r\n    z-index: 2000;\r\n    position: fixed;\r\n    top: 200px;\r\n    left: 300px;\r\n    padding: 10px;\r\n    .color{\r\n        -webkit-border-radius: 50%;\r\n        border-radius: 50%;\r\n        -webkit-box-sizing: border-box;\r\n        box-sizing: border-box;\r\n        display: inline-block;\r\n        outline: none;\r\n        width: 18px;\r\n        height: 18px;\r\n        margin: 3px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        background-color: #e8eaed;\r\n        :hover{\r\n            transform: scale(1.11);\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nexport const Opacity = styled.div`\r\n    z-index: 1005;\r\n    width: 100%;\r\n    top: 0;\r\n    bottom: 0;\r\n    pointer-events: ;\r\n    position: fixed;\r\n    opacity: 1;\r\n    input{\r\n        outline: none;\r\n    }\r\n    height: 100%;\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DatePropType } from '../shared/prop-types/date';\r\nimport MonthlyCalendarDate from './MonthlyCalendarDate';\r\nimport * as s from './styleMonthCalendar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction MonthlyCalendarGrid({ dates, setDate, dateT }) {\r\n  function separar(base, maximo = 7) {\r\n    var resultado = [[]];\r\n    var grupo = 0;\r\n    for (var indice = 0; indice < base.length; indice++) {\r\n      if (resultado[grupo] === undefined) {\r\n        resultado[grupo] = [];\r\n      }\r\n      resultado[grupo].push(base[indice]);\r\n      if ((indice + 1) % maximo === 0) {\r\n        grupo = grupo + 1;\r\n      }\r\n    }\r\n    return resultado;\r\n  }\r\n  const datas = separar(dates);\r\n  return (\r\n    <>\r\n      {datas.map((dates, index) => (\r\n      <s.container.left.calendarContainer.calendar.container.grid.row\r\n      key={index}\r\n      >\r\n        { dates.map((date, indice) => ( \r\n          <MonthlyCalendarDate\r\n          dateT={dateT}\r\n          setDate={setDate}\r\n          atual={new Date().getUTCDate() < parseInt(date.text)}\r\n          key={date.key} date={date} />\r\n        ))}\r\n      </s.container.left.calendarContainer.calendar.container.grid.row>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nMonthlyCalendarGrid.propTypes = {\r\n  setDate: PropTypes.func.isRequired,\r\n  dateT: PropTypes.string.isRequired,\r\n  dates: PropTypes.arrayOf(DatePropType.isRequired).isRequired,\r\n};\r\n\r\nexport default MonthlyCalendarGrid;\r\n","import styled from 'styled-components';\r\n\r\nexport const Opacity = styled.div`\r\n    z-index: 1005;\r\n    width: 100%;\r\n    top: 0;\r\n    bottom: 0;\r\n    position: fixed;\r\n    opacity: 1;\r\n    input{\r\n        outline: none;\r\n    }\r\n    height: 100%;\r\n    background: rgba(0,0,0,.40);\r\n`\r\n\r\nexport const Draggable = styled.div`\r\n    -webkit-box-align: center;\r\n    box-align: center;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-box-orient: vertical;\r\n    box-orient: vertical;\r\n    -webkit-flex-direction: column;\r\n    flex-direction: column;\r\n    bottom: 0;\r\n    left: 0;\r\n    padding: 0 5%;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    -webkit-transition: -webkit-transform .4s cubic-bezier(0.4,0.0,0.2,1);\r\n    transition: -webkit-transform .4s cubic-bezier(0.4,0.0,0.2,1);\r\n    -webkit-transition: transform .4s cubic-bezier(0.4,0.0,0.2,1);\r\n    transition: transform .4s cubic-bezier(0.4,0.0,0.2,1);\r\n`\r\n\r\nexport const Modal = styled.div`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-direction: row;\r\n    flex-direction: row;\r\n    -webkit-align-items: stretch;\r\n    align-items: stretch;\r\n    overflow: hidden;\r\n    -webkit-box-shadow: 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%), 0px 11px 15px -7px rgb(0 0 0 / 20%);\r\n    box-shadow: 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%), 0px 11px 15px -7px rgb(0 0 0 / 20%);\r\n    -webkit-border-radius: 8px;\r\n    border-radius: 8px;\r\n    opacity: 1;\r\n    -webkit-transition: opacity 200ms ease-in-out;\r\n    transition: opacity 200ms ease-in-out;\r\n    -webkit-flex-shrink: 1;\r\n    flex-shrink: 1;\r\n    max-height: 100%;\r\n`\r\n\r\nModal.span = styled.span`\r\n    max-width: 400px;\r\n    width: 100%;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    background-color: #fff;\r\n    pointer-events: auto;\r\n    position: relative;\r\n    position: absolute;\r\n    top: 50%;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-direction: row;\r\n    flex-direction: row;\r\n    -webkit-align-items: stretch;\r\n    align-items: stretch;\r\n    overflow: hidden;\r\n    -webkit-box-shadow: 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%), 0px 11px 15px -7px rgb(0 0 0 / 20%);\r\n    box-shadow: 0px 24px 38px 3px rgb(0 0 0 / 14%), 0px 9px 46px 8px rgb(0 0 0 / 12%), 0px 11px 15px -7px rgb(0 0 0 / 20%);\r\n    -webkit-border-radius: 8px;\r\n    border-radius: 8px;\r\n    -webkit-transition: opacity 200ms ease-in-out;\r\n    transition: opacity 200ms ease-in-out;\r\n    padding: 2em 3em 2em;\r\n    padding-top: 5em;\r\n    left: 35%;\r\n    top: 45%;\r\n    form{\r\n        position: relative;\r\n        width: 100%;\r\n        display: flex;\r\n        display: flex;\r\n        align-content: flex-end;\r\n        flex-wrap: wrap;\r\n        flex-direction: column;\r\n        justify-content: flex-end;\r\n    }\r\n    .header{\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        display: -webkit-box;\r\n        display: -webkit-flex;\r\n        display: flex;\r\n        -webkit-justify-content: left;\r\n        justify-content: left;\r\n        -webkit-align-items: center;\r\n        align-items: center;\r\n        height: 36px;\r\n        border-top-left-radius: 8px;\r\n        border-top-right-radius: 8px;\r\n        background-color: #f1f3f4;\r\n        -webkit-box-shadow: inset 0 1px 0 #fff;\r\n        box-shadow: inset 0 1px 0 #fff;\r\n        cursor: move;\r\n        overflow: hidden;\r\n        -webkit-transition: .3s ease opacity;\r\n        transition: .3s ease opacity;\r\n    }\r\n    .bottom{\r\n        position: relative;\r\n        text-align: right;\r\n        -webkit-box-flex: none;\r\n        -webkit-flex: none;\r\n        flex: none;\r\n        margin-top: 40px;\r\n        line-height: 0;\r\n        padding: 8px 16px 0;\r\n    }\r\n`","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport * as s from './style';\r\nimport Button from '@material-ui/core/Button';\r\nimport Draggable from 'react-draggable';\r\n\r\nexport function TaskModal(props) {\r\n    const [task, setTask] = useState({});\r\n    if(task.title === undefined ){\r\n        setTask(props.task)\r\n    }\r\n    const handleChange = event => {\r\n        task.title = event.target.value;\r\n    }\r\n    \r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        props.setOpenModal(false)\r\n        props.editTaskModal(task, task.title)\r\n    }\r\n    return (\r\n        <> \r\n        { props.open &&\r\n            <s.Opacity>\r\n                <s.Draggable>\r\n                    <s.Modal>\r\n                        <Draggable\r\n                        handle=\".header\"\r\n                        >\r\n                            <s.Modal.span\r\n                            style={{\r\n                                opacity: `${(props.open ? 1 : 0)}`\r\n                            }}\r\n                            >\r\n                            <div className=\"header\">\r\n\r\n                            </div>\r\n                            {\r\n                                task.title !== null &&\r\n                                <form \r\n                                onSubmit={e => submitForm(e)}\r\n                                noValidate autoComplete=\"off\">\r\n                                <TextField\r\n                                onChange={handleChange}\r\n                                style={{\r\n                                    width: `100%`\r\n                                }}\r\n                                label=\"Adicionar título\" />\r\n                                <div className=\"bottom\">\r\n                                <Button \r\n                                onClick={() => props.setOpenModal(false)}\r\n                                variant=\"contained\" color=\"primary\">\r\n                                    Salvar\r\n                                </Button>\r\n                                </div>\r\n                                </form>\r\n                            }\r\n                            </s.Modal.span>\r\n                        </Draggable>\r\n                    </s.Modal>\r\n                </s.Draggable>\r\n            </s.Opacity>\r\n        }\r\n        </>\r\n    )\r\n}","export const colors = [\r\n        {\r\n            c: \"#d50000\",\r\n            n: \"Tomate\"\r\n        },\r\n        {\r\n            c: \"#f4511e\",\r\n            n: \"Tangerina\"\r\n        },\r\n        {\r\n            c: \"#f6bf26\",\r\n            n: \"Banana\"\r\n        },\r\n        {\r\n            c: \"#33b679\",\r\n            n: \"Sálvia\"\r\n        },\r\n        {\r\n            c: \"#0b8043\",\r\n            n: \"Manjericão\"\r\n        },\r\n        {\r\n            c: \"#0b8043\",\r\n            n: \"Pavão\"\r\n        },\r\n        {\r\n            c: \"#039be5\",\r\n            n: \"Mirtilo\"\r\n        },\r\n        {\r\n            c: \"#3f51b5\",\r\n            n: \"Lavanda\"\r\n        },\r\n        {\r\n            c: \"#8e24aa\",\r\n            n: \"Uva\"\r\n        },\r\n        {\r\n            c: \"#616161\",\r\n            n: \"Grafite\"\r\n        }\r\n]","export const hoursT = [\r\n    \"12:00\",\r\n    \"01:00\",\r\n    \"02:00\",\r\n    \"03:00\",\r\n    \"04:00\",\r\n    \"05:00\",\r\n    \"06:00\",\r\n    \"07:00\",\r\n    \"08:00\",\r\n    \"09:00\",\r\n    \"10:00\",\r\n    \"11:00\",\r\n    \"12:00\",\r\n    \"13:00\",\r\n    \"14:00\",\r\n    \"15:00\",\r\n    \"16:00\",\r\n    \"17:00\",\r\n    \"18:00\",\r\n    \"19:00\",\r\n    \"20:00\",\r\n    \"21:00\",\r\n    \"22:00\",\r\n    \"23:00\"\r\n]","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getWeekdaysDescriptions } from '../../helpers/calendar';\r\nimport MonthlyCalendarHeader from './MonthlyCalendarHeader';\r\nimport MonthlyCalendarGrid from './MonthlyCalendarGrid';\r\nimport { getMonthlyCalendarGrid } from '../../selectors/ui/calendar';\r\nimport { getDisplayMonthAndYear } from '../../selectors/ui/month';\r\nimport { DatePropType, DateReminderPropType } from '../shared/prop-types/date';\r\nimport { getFormattedDateReminders } from '../../selectors/ui/calendar';\r\nimport { TaskModal } from \"../task\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\nimport { colors } from \"./colorsTask\";\r\nimport { hoursT } from \"./hoursTask\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport * as s from './styleMonthCalendar';\r\n\r\n// As the user can't change the locale, keep this 'cached'.\r\nconst weekDays = getWeekdaysDescriptions();\r\n\r\nfunction MonthlyCalendar({ dates, month, reminders, editReminder, newReminder }) {\r\n  document.addEventListener('contextmenu', event => event.preventDefault());\r\n  const localS = window.localStorage.getItem(`tasks`) ? JSON.parse(window.localStorage.getItem(`tasks`)) : [];\r\n  const arrayDate = new Date().toLocaleDateString().split(\"/\")\r\n  const dateB = new Date();\r\n  const horasA = dateB.getHours();\r\n  const [dateT, setDate] = useState(`${arrayDate[2]}-${arrayDate[1]}-${arrayDate[0]}`);\r\n  const [tasks, setTask] = useState(localS || [])\r\n  const [hoursI, setHoursI] = useState(null)\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const [editT, setEditTask] = useState({})\r\n  const [ menuItem, setMenuItem ] = useState({})\r\n  const editTask = (taskA) => {\r\n    const taskAtual = tasks.find(task => task.dateT == taskA.dateT && task.index == taskA.index);\r\n    if(taskAtual){\r\n      setOpenModal(true);\r\n      setEditTask(taskAtual)\r\n      saveLocalStorage()\r\n    }\r\n  }\r\n  const editTaskModal = (taskA, title) => {\r\n    const old = tasks\r\n    const taskAtual = old.find(task => task.dateT == taskA.dateT && task.index == taskA.index);\r\n    if(taskAtual){\r\n      const index = old.indexOf(taskAtual);\r\n      title.trim().length == 0 ? title = `(Sem titulo)` : title = title\r\n      old[index].title = title\r\n      setTask([])\r\n      setTimeout(() => {\r\n        setTask(old)\r\n        saveLocalStorage()\r\n      }, 1);\r\n    }\r\n  }\r\n  const newTask = ({index, title = `(Sem titulo)`}) => {\r\n    setHoursI(index)\r\n    const taskA = {\r\n      dateT,\r\n      title, \r\n      backgroundColor: \"#3f51b5\",\r\n      index: index\r\n    }\r\n    const found = tasks.find(task => task.dateT == taskA.dateT && task.index == taskA.index);\r\n    if(!found){\r\n      const oldTask = tasks;\r\n      oldTask.push(taskA);\r\n      editTask(taskA);\r\n      setTask(oldTask);\r\n      saveLocalStorage()\r\n    }\r\n  }\r\n  const openTaskMenu = (e, taskA) => {\r\n    e.preventDefault();\r\n    if(e){\r\n      let obj = {x: e.clientX, y: e.clientY, task: taskA, down: (window.screen.availHeight - (e.clientY + 319)) <= 0}\r\n      setMenuItem(obj)\r\n    }\r\n  }\r\n  const saveLocalStorage = () => {\r\n    setTimeout(() => {\r\n      const localStorage = window.localStorage.getItem(`tasks`)\r\n      if(localStorage){\r\n        const taskB = JSON.stringify(tasks)\r\n        window.localStorage.setItem(`tasks`, taskB)\r\n      } else{\r\n        const taskB = JSON.stringify(`[]`)\r\n        window.localStorage.setItem(`tasks`, taskB)\r\n      }\r\n    }, 200);\r\n  }\r\n  function parseTime(time) {    \r\n    let timeInt = parseInt(time);\r\n    let minutes = time.substring(3,5);\r\n\r\n    // you could then add or subtract time here as needed\r\n\r\n    if(time > '12:00') {\r\n         return `${timeInt}:${minutes}pm`;\r\n    } else {\r\n         return `${timeInt}:${minutes}am`;\r\n    }\r\n}\r\n  return (\r\n    <s.container>\r\n      <s.container.left>\r\n        <s.container.left.filled />\r\n        <s.container.left.calendarContainer>\r\n          <s.container.left.calendarContainer.calendar>\r\n            <s.container.left.buttonAdd>\r\n              <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\r\n                <path fill=\"#34A853\" d=\"M16 16v14h4V20z\"></path>\r\n                <path fill=\"#4285F4\" d=\"M30 16H20l-4 4h14z\"></path>\r\n                <path fill=\"#FBBC05\" d=\"M6 16v4h10l4-4z\">\r\n                </path><path fill=\"#EA4335\" d=\"M20 16V6h-4v14z\"></path><path fill=\"none\" d=\"M0 0h36v36H0z\"></path\r\n                >\r\n              </svg>\r\n              <span>\r\n                Criar\r\n              </span>\r\n            </s.container.left.buttonAdd>\r\n            <s.container.left.calendarContainer.calendar.container >\r\n              <s.container.left.calendarContainer.calendar.container.header>\r\n                <span>\r\n                  { month }\r\n                </span>\r\n              </s.container.left.calendarContainer.calendar.container.header>\r\n              <s.container.left.calendarContainer.calendar.container.grid>\r\n                <s.container.left.calendarContainer.calendar.container.grid.row>\r\n                  <MonthlyCalendarHeader weekDays={weekDays} />\r\n                </s.container.left.calendarContainer.calendar.container.grid.row>\r\n                <MonthlyCalendarGrid \r\n                setDate={setDate}\r\n                dateT={dateT}\r\n                dates={dates} />\r\n              </s.container.left.calendarContainer.calendar.container.grid>\r\n            </s.container.left.calendarContainer.calendar.container>\r\n          </s.container.left.calendarContainer.calendar>\r\n        </s.container.left.calendarContainer>\r\n      </s.container.left>\r\n      <s.container.center>\r\n        <s.container.center.main>\r\n          <s.container.center.main.grid>\r\n            <s.container.center.main.grid.header>\r\n              <s.container.center.main.grid.header.time>\r\n                <s.container.center.main.grid.header.time.flex >\r\n                  <s.time>\r\n                    <div className=\"time\">\r\n                    GMT-03\r\n                    </div>\r\n                    <s.time.times>\r\n                      <s.time.times.time style={{\r\n                        opacity: `0`\r\n                      }}>\r\n                        <span>\r\n                        GMT-03\r\n                        </span>\r\n                      </s.time.times.time>\r\n                      { hoursT.map((item, index) => (\r\n                      <s.time.times.time>\r\n                        <span>\r\n                        { parseTime(item)}\r\n                        </span>\r\n                      </s.time.times.time>\r\n                      ))}\r\n                    </s.time.times>\r\n                  </s.time>\r\n                  <s.presentati>\r\n                   { [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23].map((i, index) => (\r\n                      <s.presentati.row\r\n                      style={{\r\n                        marginTop: `${index * 48}px`\r\n                      }}\r\n                      key={i}\r\n                      >\r\n                        { horasA == i &&\r\n                          <div className=\"hoursA\" />\r\n                        }\r\n                        <div\r\n                        style={{\r\n                          cursor: `pointer`\r\n                        }} \r\n                        onClick={() => newTask({index})}\r\n                        className=\"cell\"/>\r\n                        { tasks.map((task, indexT) => (\r\n                        task.index === index && task.dateT === dateT &&\r\n                        <s.tarefa\r\n                        style={{\r\n                          backgroundColor: task.backgroundColor\r\n                        }}\r\n                        onAuxClickCapture={(e) => openTaskMenu(e, task)}\r\n                        key={indexT}\r\n                        >\r\n                          <span>\r\n                            {task.title}\r\n                          </span>\r\n                          <p>\r\n                            { parseTime(hoursT[task.index])} até {parseTime(hoursT[task.index + 1])}\r\n                          </p>\r\n                        </s.tarefa>\r\n                        ))}\r\n                      </s.presentati.row>\r\n                   ))}\r\n                  </s.presentati>\r\n                </s.container.center.main.grid.header.time.flex>\r\n              </s.container.center.main.grid.header.time>\r\n            </s.container.center.main.grid.header>\r\n            <s.presentation.grid>\r\n                    <s.presentation>\r\n                      <s.presentation.row>\r\n                        <s.presentation.row.presentation.none />\r\n                        <s.presentation.row.presentation.date>\r\n                          <s.presentation.row.presentation.date.data>\r\n                            <div \r\n                            style={{opacity: 0}}\r\n                            className=\"dayT\">\r\n                              aaa.\r\n                            </div>\r\n                            <div className=\"day\">\r\n                              { dateT.split(\"-\")[2] }\r\n                            </div>\r\n                          </s.presentation.row.presentation.date.data>\r\n                        </s.presentation.row.presentation.date>\r\n                      </s.presentation.row>\r\n                    </s.presentation>\r\n                  </s.presentation.grid>\r\n          </s.container.center.main.grid>\r\n        </s.container.center.main>\r\n      </s.container.center>\r\n      { menuItem.task !== undefined &&\r\n        <s.Opacity onClick={() => setMenuItem({})}>\r\n          <s.menuItem\r\n          style={{\r\n            top: `${menuItem.y}px`,\r\n            left: `${menuItem.x}px`,\r\n            marginTop: `${(menuItem.down ? `-175px`: `0px`)}`\r\n          }}\r\n          >\r\n          <Button \r\n          onClick={() => {\r\n            const found = tasks.find(task => task.index === menuItem.task.index &&\r\n            task.dateT === menuItem.task.dateT);\r\n            if(found){\r\n              const id = tasks.indexOf(found);\r\n              const old = tasks;\r\n              old.splice(id, 1);\r\n              setTask(old)\r\n              setMenuItem({})\r\n              saveLocalStorage()\r\n            }\r\n          }}\r\n          style={{\r\n            position: `relative`,\r\n            width: `100%`,\r\n            color: \"#888888\",\r\n            textAlign: `left`\r\n          }}\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Excluir\r\n        </Button>\r\n        <Button \r\n          onClick={() => editTask(menuItem.task)}\r\n          style={{\r\n            position: `relative`,\r\n            width: `100%`,\r\n            color: \"#888888\",\r\n            textAlign: `left`\r\n          }}\r\n          startIcon={<EditIcon />}\r\n        >\r\n          Editar\r\n        </Button>\r\n        <hr/>\r\n        <br/>\r\n        { colors.map((item, i) => (\r\n        <Tooltip \r\n        placement=\"top\"\r\n        title={item.n}>\r\n        <div \r\n        onClick={() => {\r\n          const old = tasks\r\n        const taskAtual = old.find(task => task.dateT == menuItem.task.dateT && task.index == menuItem.task.index);\r\n        if(taskAtual){\r\n          const index = old.indexOf(taskAtual);\r\n          old[index].backgroundColor = item.c\r\n          setTask([])\r\n          setTimeout(() => {\r\n            setTask(old)\r\n            saveLocalStorage()\r\n          }, 1);\r\n        }\r\n        }}\r\n        style={{\r\n          backgroundColor: item.c\r\n        }}\r\n        className=\"color\">\r\n          {\r\n          item.c === menuItem.task.backgroundColor &&\r\n          <CheckIcon\r\n          style={{\r\n            position: `absolute`,\r\n            color: `white`,\r\n            width: `14px`,\r\n            left: `2px`,\r\n            marginTop: `-2px`\r\n          }\r\n          }\r\n          />\r\n          }\r\n        </div>\r\n        </Tooltip>\r\n        ))}\r\n        </s.menuItem>\r\n        </s.Opacity>\r\n      }\r\n      { openModal &&\r\n\r\n        <TaskModal\r\n        task={editT}\r\n        editTaskModal={editTaskModal}\r\n        open={openModal}\r\n        setOpenModal={setOpenModal}\r\n        />\r\n        \r\n      }\r\n    </s.container>\r\n  );\r\n}\r\n\r\n\r\nMonthlyCalendar.propTypes = {\r\n  date: DatePropType.isRequired,\r\n  reminders: PropTypes.arrayOf(DateReminderPropType.isRequired).isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state, props, ownProps) {\r\n  const dates = getMonthlyCalendarGrid(state);\r\n  return {\r\n    ...props,\r\n    dates,\r\n    month: getDisplayMonthAndYear(state),\r\n    reminders: getFormattedDateReminders(state, { dateId: \"\" }),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps)(MonthlyCalendar);\r\n","import { createSelector } from 'reselect';\r\nimport { millisToDateTimeStrings } from '../../helpers/calendar';\r\n\r\nexport const getReminder = (state) => state.ui.reminder;\r\n\r\nexport const getFormattedReminder = createSelector(\r\n  [getReminder],\r\n  (reminder) => {\r\n    if (!reminder) return null;\r\n\r\n    return {\r\n      id: reminder.id,\r\n      description: reminder.description,\r\n      color: reminder.color,\r\n      city: reminder.city,\r\n      ...millisToDateTimeStrings(reminder.dateTime),\r\n    };\r\n  }\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlusIcon = (props) => {\r\n  return (\r\n    <i className={props.className}>\r\n      <svg\r\n        className={props.svgClassName}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n      >\r\n        <path\r\n          d=\"M18 6L6 18\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M6 6L18 18\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </i>\r\n  );\r\n};\r\n\r\nPlusIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  svgClassName: PropTypes.string,\r\n};\r\n\r\nexport default PlusIcon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport XIcon from '../../icons/XIcon';\r\n\r\nfunction ModalHeader({ children, onClose }) {\r\n  return (\r\n    <div className=\"flex flex-row flex-nowrap items-center justify-between\">\r\n      <div className=\"truncate\">{children}</div>\r\n      <button type=\"button\" className=\"p-1\" onClick={onClose}>\r\n        <XIcon svgClassName=\"w-6 h-6\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nModalHeader.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalHeader;\r\n","import React, { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ModalBackdrop extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.node,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = createRef();\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    if (e.target === this.ref.current) {\r\n      this.props.onClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={this.ref}\r\n        onClick={this.handleClick}\r\n        className=\"fixed top-0 left-0 flex flex-col lg:py-28 h-full w-full bg-black z-20 bg-opacity-30\"\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalBackdrop;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalBackdrop from './ModalBackdrop';\r\n\r\nfunction ModalResponsive({ children, onClose }) {\r\n  return (\r\n    <ModalBackdrop onClick={onClose}>\r\n      <div className=\"z-30 mx-auto w-full lg:max-w-2xl h-auto flex-grow lg:flex-grow-0 overflow-hidden overflow-y-scroll bg-white lg:shadow-lg lg:rounded-md\">\r\n        {children}\r\n      </div>\r\n    </ModalBackdrop>\r\n  );\r\n}\r\n\r\nModalResponsive.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalResponsive;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\n// Should be used with Formik.Field component prop\r\nfunction FormTextInput({\r\n  field,\r\n  form: { touched, errors },\r\n  className,\r\n  ...props\r\n}) {\r\n  const hasError = touched[field.name] && Boolean(errors[field.name]);\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className={classNames(\r\n        'placeholder-gray-400 bg-white border border-gray-300 focus:ring-indigo-500 focus:border-indigo-500 block w-auto shadow-sm rounded-md',\r\n        {\r\n          'ring-2 ring-red-500': hasError,\r\n        },\r\n        className\r\n      )}\r\n      {...field}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FormTextInput;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\n// Should be used with Formik.Field component prop\r\nfunction FormDatePicker({\r\n  field,\r\n  form: { touched, errors },\r\n  className,\r\n  ...props\r\n}) {\r\n  const hasError = touched[field.name] && Boolean(errors[field.name]);\r\n\r\n  return (\r\n    <input\r\n      type=\"date\"\r\n      className={classNames(\r\n        'placeholder-gray-400 bg-white border border-gray-300 focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm rounded-md',\r\n        {\r\n          'ring-2 ring-red-500': hasError,\r\n        },\r\n        className\r\n      )}\r\n      {...field}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FormDatePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormErrorMessage({ children }) {\r\n  return (\r\n    <div className=\"text-xs sm:text-sm block text-red-500\">{children}</div>\r\n  );\r\n}\r\n\r\nFormErrorMessage.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FormErrorMessage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormLabel({ children, htmlFor }) {\r\n  return (\r\n    <label htmlFor={htmlFor} className=\"block font-medium text-gray-700 \">\r\n      {children}\r\n    </label>\r\n  );\r\n}\r\n\r\nFormLabel.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  htmlFor: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FormLabel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormFieldset({ children }) {\r\n  return <div className=\"flex flex-col gap-1\">{children}</div>;\r\n}\r\n\r\nFormFieldset.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default FormFieldset;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nfunction BaseButton({ children, className, ...props }) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={classNames(\r\n        'uppercase w-full sm:w-auto flex flex-row flex-nowrap items-center justify-center gap-2 px-4 py-2 shadow rounded text-lg font-medium transition-colors duration-150',\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nBaseButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default BaseButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FormActions({ children }) {\r\n  return (\r\n    <div className=\"mt-4 flex flex-row flex-wrap items-center justify-end\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nFormActions.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default FormActions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CheckIcon = (props) => {\r\n  return (\r\n    <i className={props.className}>\r\n      <svg\r\n        className={props.svgClassName}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n      >\r\n        <path\r\n          d=\"M20 6L9 17L4 12\"\r\n          stroke=\"white\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </i>\r\n  );\r\n};\r\n\r\nCheckIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  svgClassName: PropTypes.string,\r\n};\r\n\r\nexport default CheckIcon;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\n// Should be used with Formik.Field component prop\r\nfunction FormTimePicker({\r\n  field,\r\n  form: { touched, errors },\r\n  className,\r\n  ...props\r\n}) {\r\n  const hasError = touched[field.name] && Boolean(errors[field.name]);\r\n\r\n  return (\r\n    <input\r\n      type=\"time\"\r\n      className={classNames(\r\n        'placeholder-gray-400 bg-white border border-gray-300 focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm rounded-md',\r\n        {\r\n          'ring-2 ring-red-500': hasError,\r\n        },\r\n        className\r\n      )}\r\n      {...field}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FormTimePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getBackgroundColor } from '../../helpers/colors';\r\n\r\nfunction ReminderColorCircle({ colorName }) {\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        'w-6 h-6 rounded-full',\r\n        getBackgroundColor(colorName)\r\n      )}\r\n    >\r\n      <span className=\"sr-only\">Color: {colorName}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nReminderColorCircle.propTypes = {\r\n  colorName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ReminderColorCircle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PlusIcon = (props) => {\r\n  return (\r\n    <i className={props.className}>\r\n      <svg\r\n        className={props.svgClassName}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"20\"\r\n        height=\"20\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n    </i>\r\n  );\r\n};\r\n\r\nPlusIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  svgClassName: PropTypes.string,\r\n};\r\n\r\nexport default PlusIcon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReminderColorCircle from './ReminderColorCircle';\r\n\r\nfunction ReminderColorPickerItem({ colorName, onClick }) {\r\n  return (\r\n    <li\r\n      tabIndex=\"0\"\r\n      id=\"listbox-item-0\"\r\n      role=\"option\"\r\n      aria-selected={false}\r\n      className=\"cursor-pointer select-none relative p-2 transition duration-200 hover:bg-indigo-100\"\r\n      onClick={onClick}\r\n    >\r\n      <div className=\"flex items-center justify-center\">\r\n        <ReminderColorCircle colorName={colorName} />\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nReminderColorPickerItem.propTypes = {\r\n  colorName: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ReminderColorPickerItem;\r\n","import React, { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ReminderColorCircle from './ReminderColorCircle';\r\nimport ExpandIcon from '../icons/ExpandIcon';\r\nimport { ALL_COLORS } from '../../helpers/colors';\r\nimport ReminderColorPickerItem from './ReminderColorPickerItem';\r\n\r\n// Should be used with Formik.Field `as` prop\r\nclass ReminderColorPicker extends Component {\r\n  static propTypes = {\r\n    value: PropTypes.oneOf(ALL_COLORS).isRequired,\r\n    onBlur: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.ref = createRef();\r\n  }\r\n\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  toggleOpen = () => {\r\n    this.setState((prevState) => ({\r\n      open: !prevState.open,\r\n    }));\r\n  };\r\n\r\n  close = () => {\r\n    this.setState(() => ({\r\n      open: false,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = (e) => {\r\n    if (this.ref.current !== null && !this.ref.current.contains(e.target)) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  handleSelectColor = (colorName) => {\r\n    this.props.onChange({\r\n      target: {\r\n        name: this.props.name,\r\n        value: colorName,\r\n      },\r\n    });\r\n    this.close();\r\n  };\r\n\r\n  renderColorList = () => {\r\n    const { value } = this.props;\r\n\r\n    return (\r\n      <div className=\"absolute mt-1 w-full rounded-md bg-white shadow-lg\">\r\n        <ul\r\n          tabIndex=\"0\"\r\n          role=\"listbox\"\r\n          aria-labelledby=\"listbox-label\"\r\n          aria-activedescendant=\"listbox-item-3\"\r\n          className=\"max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\r\n        >\r\n          {ALL_COLORS.filter((color) => color !== value).map((colorName) => (\r\n            <ReminderColorPickerItem\r\n              key={colorName}\r\n              colorName={colorName}\r\n              onClick={() => this.handleSelectColor(colorName)}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('click', this.handleOutsideClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', this.handleOutsideClick);\r\n  }\r\n\r\n  render() {\r\n    const { className, name, value } = this.props;\r\n\r\n    return (\r\n      <div ref={this.ref} name={name} className=\"relative\">\r\n        <button\r\n          type=\"button\"\r\n          aria-haspopup=\"listbox\"\r\n          aria-expanded=\"true\"\r\n          aria-labelledby=\"listbox-label\"\r\n          className={classNames(\r\n            'relative w-auto bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm',\r\n            className\r\n          )}\r\n          onClick={this.toggleOpen}\r\n        >\r\n          <span className=\"flex items-center\">\r\n            <ReminderColorCircle colorName={value} />\r\n          </span>\r\n          <span className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n            <ExpandIcon svgClassName=\"h-5 w-5 text-gray-400\" />\r\n          </span>\r\n        </button>\r\n\r\n        {this.state.open && this.renderColorList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReminderColorPicker;\r\n","export const GET_FORECAST = 'UI/GET_FORECAST';\r\nexport const SET_FORECAST = 'UI/SET_FORECAST';\r\nexport const RESET_FORECAST = 'UI/RESET_FORECAST';\r\n\r\nexport function getForecast({ city, date }) {\r\n  return {\r\n    type: GET_FORECAST,\r\n    payload: { city, date },\r\n  };\r\n}\r\n\r\nexport function setForecast(forecast) {\r\n  return {\r\n    type: SET_FORECAST,\r\n    payload: forecast,\r\n  };\r\n}\r\n\r\nexport function resetForecast() {\r\n  return {\r\n    type: RESET_FORECAST,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { ALL_COLORS } from '../../../helpers/colors';\r\n\r\nexport const ReminderPropType = PropTypes.shape({\r\n  id: PropTypes.string,\r\n  description: PropTypes.string.isRequired,\r\n  color: PropTypes.oneOf(ALL_COLORS).isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  time: PropTypes.string.isRequired,\r\n  city: PropTypes.string.isRequired,\r\n});\r\n","export const getForecast = (state) => state.ui.forecast?.forecast;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChevronsUpIcon = (props) => {\r\n  return (\r\n    <i className={props.className}>\r\n      <svg\r\n        className={props.svgClassName}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"24\"\r\n        height=\"25\"\r\n        viewBox=\"0 0 24 25\"\r\n        fill=\"none\"\r\n      >\r\n        <path\r\n          d=\"M17 11.5L12 6.5L7 11.5\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M17 18.5L12 13.5L7 18.5\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </i>\r\n  );\r\n};\r\n\r\nChevronsUpIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  svgClassName: PropTypes.string,\r\n};\r\n\r\nexport default ChevronsUpIcon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChevronsDownIcon = (props) => {\r\n  return (\r\n    <i className={props.className}>\r\n      <svg\r\n        className={props.svgClassName}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n      >\r\n        <path\r\n          d=\"M7 13L12 18L17 13\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M7 6L12 11L17 6\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </i>\r\n  );\r\n};\r\n\r\nChevronsDownIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  svgClassName: PropTypes.string,\r\n};\r\n\r\nexport default ChevronsDownIcon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChevronsUpIcon from '../../icons/ChevronsUpIcon';\r\nimport ChevronsDownIcon from '../../icons/ChevronsDownIcon';\r\n\r\nfunction ReminderForecast({ forecast }) {\r\n  const hasForecast = Boolean(forecast);\r\n\r\n  return (\r\n    <div\r\n      className={classNames('w-full h-auto transition-all duration-1000', {\r\n        'max-h-96 opacity-100': hasForecast,\r\n        'max-h-0 opacity-0': !hasForecast,\r\n      })}\r\n    >\r\n      {hasForecast && (\r\n        <div className=\"border border-gray-300 rounded-md p-4 flex flex-row flex-wrap gap-x-12 gap-y-4 items-center\">\r\n          <div className=\"flex flex-col gap-2 justify-center items-end\">\r\n            {forecast.maxTemp && (\r\n              <div className=\"flex gap-1 items-start\">\r\n                <p title=\"Max. Temp.\" className=\"text-3xl font-medium\">\r\n                  {forecast.maxTemp.toFixed(1)}&deg;F\r\n                </p>\r\n                <ChevronsUpIcon svgClassName=\"w-6 h-6\" />\r\n              </div>\r\n            )}\r\n            {forecast.minTemp && (\r\n              <div className=\"flex gap-1 items-center text-gray-700\">\r\n                <p title=\"Min. Temp.\" className=\"text-2xl\">\r\n                  {forecast.minTemp.toFixed(1)}&deg;F\r\n                </p>\r\n                <ChevronsDownIcon svgClassName=\"w-5 h-5\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {forecast.condition?.text && (\r\n            <div className=\"flex flex-row gap-2 items-center justify-start\">\r\n              {forecast.condition?.icon && (\r\n                <img\r\n                  alt={forecast.condition.text}\r\n                  src={forecast.condition.icon}\r\n                  className=\"w-16 h-16\"\r\n                />\r\n              )}\r\n              <p title=\"Condition\" className=\"text-xl font-medium\">\r\n                {forecast.condition.text}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nReminderForecast.propTypes = {\r\n  forecast: PropTypes.shape({\r\n    maxTemp: PropTypes.number,\r\n    minTemp: PropTypes.number,\r\n    avgTemp: PropTypes.number,\r\n    condition: PropTypes.shape({\r\n      text: PropTypes.string,\r\n      icon: PropTypes.string,\r\n    }).isRequired,\r\n  }),\r\n};\r\n\r\nexport default ReminderForecast;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Formik from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as forecastUIActions from '../../../actions/ui/forecast';\r\nimport * as forecastUISelectors from '../../../selectors/ui/forecast';\r\nimport ReminderForecast from './ReminderForecast';\r\n\r\nclass ReminderForecastContainer extends Component {\r\n  static propTypes = {\r\n    names: PropTypes.shape({\r\n      city: PropTypes.string.isRequired,\r\n      date: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n  static getFieldValue(name, formik) {\r\n    return String(Formik.getIn(formik.values, name)).trim();\r\n  }\r\n\r\n  static getAllValues = (names, formik) => {\r\n    return {\r\n      city: ReminderForecastContainer.getFieldValue(names.city, formik),\r\n      date: ReminderForecastContainer.getFieldValue(names.date, formik),\r\n    };\r\n  };\r\n\r\n  isValid = () => {\r\n    const { names, formik } = this.props;\r\n\r\n    return Object.keys(names).every((name) => {\r\n      const error = Formik.getIn(formik.errors, name);\r\n      return (\r\n        (typeof error === 'undefined' || Object.keys(error).length === 0) &&\r\n        ReminderForecastContainer.getFieldValue(name, formik).length !== 0\r\n      );\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.isValid()) {\r\n      this.props.getForecast(\r\n        ReminderForecastContainer.getAllValues(\r\n          this.props.names,\r\n          this.props.formik\r\n        )\r\n      );\r\n    } else {\r\n      this.props.resetForecast();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prevValues = ReminderForecastContainer.getAllValues(\r\n      prevProps.names,\r\n      prevProps.formik\r\n    );\r\n    const currentValues = ReminderForecastContainer.getAllValues(\r\n      this.props.names,\r\n      this.props.formik\r\n    );\r\n\r\n    if (\r\n      prevValues.city !== currentValues.city ||\r\n      prevValues.date !== currentValues.date\r\n    ) {\r\n      if (this.isValid()) {\r\n        this.props.getForecast(currentValues);\r\n      } else {\r\n        this.props.resetForecast();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    console.error('Uncaught error in forecast container component', {\r\n      error,\r\n      info,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <ReminderForecast forecast={this.props.forecast} />;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    forecast: forecastUISelectors.getForecast(state),\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      getForecast: forecastUIActions.getForecast,\r\n      resetForecast: forecastUIActions.resetForecast,\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nconst WithFormik = Formik.connect(ReminderForecastContainer);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithFormik);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport FormTextInput from '../shared/forms/FormTextInput';\r\nimport FormDatePicker from '../shared/forms/FormDatePicker';\r\nimport FormErrorMessage from '../shared/forms/FormErrorMessage';\r\nimport FormLabel from '../shared/forms/FormLabel';\r\nimport FormFieldset from '../shared/forms/FormFieldset';\r\nimport BaseButton from '../shared/buttons/BaseButton';\r\nimport FormActions from '../shared/forms/FormActions';\r\nimport CheckIcon from '../icons/CheckIcon';\r\nimport {\r\n  DATE_FORMAT,\r\n  DATE_REGEX,\r\n  TIME_FORMAT,\r\n  TIME_REGEX,\r\n} from '../../helpers/calendar';\r\nimport FormTimePicker from '../shared/forms/FormTimePicker';\r\nimport ReminderColorPicker from './ReminderColorPicker';\r\nimport { ALL_COLORS } from '../../helpers/colors';\r\nimport { ReminderPropType } from '../shared/prop-types/reminder';\r\nimport ReminderForecastContainer from './forecast/ReminderForecastContainer';\r\n\r\nconst ReminderSchema = Yup.object().shape({\r\n  description: Yup.string()\r\n    .max(30, 'No more than 30 character, please.')\r\n    .required('Please describe your reminder (max. 30 characters).'),\r\n  color: Yup.string()\r\n    .oneOf(ALL_COLORS, 'Color is invalid.')\r\n    .required('Please inform a color.'),\r\n  date: Yup.string()\r\n    .matches(DATE_REGEX, `Date must be valid (${DATE_FORMAT}).`)\r\n    .required('Please inform the day you want to get reminded.'),\r\n  time: Yup.string()\r\n    .matches(TIME_REGEX, `Time must be valid (${TIME_FORMAT}).`)\r\n    .required('Please inform the time of the day you want to get reminded.'),\r\n});\r\n\r\nclass ReminderForm extends Component {\r\n  static propTypes = {\r\n    reminder: ReminderPropType.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  getInitialValues = () => {\r\n    const { description, color, date, time, city } = this.props.reminder;\r\n\r\n    return {\r\n      description,\r\n      color,\r\n      date,\r\n      time,\r\n      city: city,\r\n    };\r\n  };\r\n\r\n  handleSubmit = (values) => {\r\n    this.props.onSubmit({\r\n      id: this.props.reminder.id,\r\n      description: values.description,\r\n      color: values.color,\r\n      city: values.city,\r\n      date: values.date,\r\n      time: values.time,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={this.getInitialValues()}\r\n        validationSchema={ReminderSchema}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form className=\"w-full flex flex-col gap-3\">\r\n          <FormFieldset>\r\n            <FormLabel htmlFor=\"description\">\r\n              What do you want to remember?\r\n            </FormLabel>\r\n            <div className=\"flex flex-row flex-wrap gap-2\">\r\n              <Field\r\n                id=\"description\"\r\n                name=\"description\"\r\n                component={FormTextInput}\r\n                placeholder=\"e.g.: Buy milk\"\r\n                className=\"flex-grow\"\r\n              />\r\n              <Field\r\n                name=\"color\"\r\n                as={ReminderColorPicker}\r\n                className=\"flex-shrink\"\r\n              />\r\n            </div>\r\n            <ErrorMessage component={FormErrorMessage} name=\"description\" />\r\n            <ErrorMessage component={FormErrorMessage} name=\"color\" />\r\n          </FormFieldset>\r\n\r\n          <FormFieldset>\r\n            <FormLabel htmlFor=\"date\">When?</FormLabel>\r\n\r\n            <div className=\"flex flex-row flex-wrap gap-2\">\r\n              <Field\r\n                id=\"date\"\r\n                name=\"date\"\r\n                component={FormDatePicker}\r\n                className=\"flex-grow\"\r\n              />\r\n              <Field\r\n                id=\"time\"\r\n                name=\"time\"\r\n                component={FormTimePicker}\r\n                className=\"w-full sm:w-44\"\r\n              />\r\n            </div>\r\n            <ErrorMessage component={FormErrorMessage} name=\"date\" />\r\n            <ErrorMessage component={FormErrorMessage} name=\"time\" />\r\n          </FormFieldset>\r\n\r\n          <FormFieldset>\r\n            <FormLabel htmlFor=\"city\">Where?</FormLabel>\r\n            <Field\r\n              id=\"city\"\r\n              name=\"city\"\r\n              component={FormTextInput}\r\n              placeholder=\"e.g.: New York City\"\r\n            />\r\n            <ErrorMessage component={FormErrorMessage} name=\"city\" />\r\n          </FormFieldset>\r\n\r\n          <ReminderForecastContainer names={{ city: 'city', date: 'date' }} />\r\n\r\n          <FormActions>\r\n            <BaseButton\r\n              type=\"submit\"\r\n              className=\"bg-indigo-700 hover:bg-indigo-500 text-white\"\r\n            >\r\n              <CheckIcon svgClassName=\"w-6 h-6\" />\r\n              Confirm\r\n            </BaseButton>\r\n          </FormActions>\r\n        </Form>\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReminderForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalHeader from '../shared/modal/ModalHeader';\r\nimport ModalResponsive from '../shared/modal/ModalResponsive';\r\nimport ReminderForm from './ReminderForm';\r\nimport { ReminderPropType } from '../shared/prop-types/reminder';\r\n\r\nclass ReminderModal extends Component {\r\n  render() {\r\n    const { reminder, onClose, onSubmit } = this.props;\r\n    const isNew = !Boolean(reminder.id);\r\n\r\n    return (\r\n      <ModalResponsive onClose={onClose}>\r\n        <div className=\"w-full h-full overflow-y-auto p-8 flex flex-col gap-8\">\r\n          <ModalHeader onClose={onClose}>\r\n            <h2 className=\"uppercase font-medium text-xl\">\r\n              {isNew ? 'New' : 'Edit'} Reminder\r\n            </h2>\r\n          </ModalHeader>\r\n\r\n          <ReminderForm reminder={reminder} onSubmit={onSubmit} />\r\n        </div>\r\n      </ModalResponsive>\r\n    );\r\n  }\r\n}\r\n\r\nReminderModal.propTypes = {\r\n  reminder: ReminderPropType.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ReminderModal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { closeReminder, submitReminder } from '../../actions/ui/reminder';\r\nimport { getFormattedReminder } from '../../selectors/ui/reminder';\r\nimport ReminderModal from './ReminderModal';\r\n\r\nfunction ReminderContainer({ reminder, closeReminder, submitReminder }) {\r\n  if (!reminder) return null;\r\n\r\n  return (\r\n    <ReminderModal\r\n      reminder={reminder}\r\n      onClose={closeReminder}\r\n      onSubmit={submitReminder}\r\n    />\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    reminder: getFormattedReminder(state),\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ closeReminder, submitReminder }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReminderContainer);\r\n","import styled from \"styled-components\";\r\n\r\nexport const mainApp = styled.div`\r\n    height: 100%;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n`\r\n\r\nmainApp.home = styled.div`\r\n    -webkit-box-flex: 1 1 auto;\r\n    -webkit-flex: 1 1 auto;\r\n    flex: 1 1 auto;\r\n    overflow: hidden;\r\n    height: 100%;\r\n`\r\n\r\nmainApp.relative = styled.div`\r\n    position: relative;\r\n    height: 100%;\r\n`\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { DateTime } from 'luxon';\r\nimport { connect } from 'react-redux';\r\nimport { setMonth } from '../actions/ui/month';\r\nimport { getMonth } from '../selectors/ui/month';\r\nimport Header from './Header';\r\nimport MonthlyCalendar from './calendar/MonthlyCalendar';\r\nimport ReminderContainer from './reminders/ReminderContainer';\r\nimport * as s from './style';\r\n\r\nfunction setNavigationBarHeightCSSVariable() {\r\n  const vh = window.innerHeight * 0.01;\r\n  document.documentElement.style.setProperty('--vh', vh + 'px');\r\n}\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('resize', setNavigationBarHeightCSSVariable);\r\n\r\n    if (this.props.month === null) {\r\n      this.props.dispatch(setMonth(DateTime.local().toFormat('yyyy-MM')));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', setNavigationBarHeightCSSVariable);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <s.mainApp>\r\n          <s.mainApp.home>\r\n            <s.mainApp.relative>\r\n              <Header/>\r\n              <MonthlyCalendar />\r\n            </s.mainApp.relative>\r\n          </s.mainApp.home>\r\n        </s.mainApp>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    ...props,\r\n    month: getMonth(state),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport month from './month';\r\nimport reminder from './reminder';\r\nimport forecast from './forecast';\r\n\r\nexport default combineReducers({\r\n  month,\r\n  reminder,\r\n  forecast,\r\n});\r\n","import { SET_MONTH } from '../../actions/ui/month';\r\n\r\nexport default function month(state = null, action) {\r\n  switch (action.type) {\r\n    case SET_MONTH:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { OPEN_REMINDER, CLOSE_REMINDER } from '../../actions/ui/reminder';\r\n\r\nexport default function reminder(state = null, action) {\r\n  switch (action.type) {\r\n    case OPEN_REMINDER:\r\n      return action.payload;\r\n\r\n    case CLOSE_REMINDER:\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { RESET_FORECAST, SET_FORECAST } from '../../actions/ui/forecast';\r\n\r\nexport default function forecast(\r\n  state = { errorMessage: null, forecast: null },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case SET_FORECAST:\r\n      return action.payload;\r\n\r\n    case RESET_FORECAST:\r\n      return { errorMessage: null, forecast: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const SET_DATE_REMINDER = 'ADD_DATE_REMINDER';\r\n\r\nexport function setDateReminder({ date, reminderId }) {\r\n  return {\r\n    type: SET_DATE_REMINDER,\r\n    payload: {\r\n      date,\r\n      reminderId,\r\n    },\r\n  };\r\n}\r\n","import { SET_DATE_REMINDER } from '../actions/dates';\r\n\r\nfunction filterDateReminders(dates, reminderIdToExclude) {\r\n  return Object.values(dates).reduce((filtered, existing) => {\r\n    return {\r\n      ...filtered,\r\n      [existing.id]: {\r\n        ...existing,\r\n        reminders: existing.reminders.filter(\r\n          (reminderId) => reminderId !== reminderIdToExclude\r\n        ),\r\n      },\r\n    };\r\n  }, {});\r\n}\r\n\r\nexport default function dates(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_DATE_REMINDER:\r\n      const entry = state[action.payload.date] ?? {\r\n        id: action.payload.date,\r\n        reminders: [],\r\n      };\r\n\r\n      return {\r\n        ...filterDateReminders(state, action.payload.reminderId),\r\n        [entry.id]: {\r\n          ...entry,\r\n          reminders: Array.from(\r\n            new Set([...entry.reminders, action.payload.reminderId])\r\n          ),\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const SET_REMINDER = 'SET_REMINDER';\r\n\r\nexport function setReminder(reminder) {\r\n  return {\r\n    type: SET_REMINDER,\r\n    payload: reminder,\r\n  };\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport ui from './ui';\r\nimport dates from './dates';\r\nimport reminders from './reminders';\r\n\r\nexport default combineReducers({\r\n  ui,\r\n  dates,\r\n  reminders,\r\n});\r\n","import { SET_REMINDER } from '../actions/reminders';\r\n\r\nexport default function reminders(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_REMINDER:\r\n      return {\r\n        ...state,\r\n        [action.payload.id]: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const FORECAST_API_BASE_URL =\r\n  process.env.REACT_APP_FORECAST_API_BASE_URL ??\r\n  'https://api.weatherapi.com/v1';\r\n","export const FORECAST_API_KEY = process.env.REACT_APP_FORECAST_API_KEY;\r\n","import axios from 'axios';\r\nimport { DateTime } from 'luxon';\r\nimport { FORECAST_API_BASE_URL } from '../../config/endpoints';\r\nimport { FORECAST_API_KEY } from '../../config/keys';\r\nimport { DATE_FORMAT } from '../../helpers/calendar';\r\n\r\nconst forecastAxiosClient = axios.create({\r\n  baseURL: FORECAST_API_BASE_URL,\r\n});\r\n\r\nconst MAX_DAYS_FOR_FORECAST = 10;\r\n\r\nfunction forecastEmpty() {\r\n  return { errorMessage: null, forecast: null };\r\n}\r\n\r\nfunction forecastError(error) {\r\n  return {\r\n    errorMessage: `An unexpected error ocurred while trying to get forecast data: \"${error}\".`,\r\n    forecast: null,\r\n  };\r\n}\r\n\r\nfunction forecastSuccess(data) {\r\n  return {\r\n    errorMessage: null,\r\n    forecast: {\r\n      maxTemp: Number(data.maxtemp_f) || null,\r\n      minTemp: Number(data.mintemp_f) || null,\r\n      avgTemp: Number(data.avgtemp_f) || null,\r\n      condition: {\r\n        code: String(data.condition?.code) || null,\r\n        text: String(data.condition?.text) || null,\r\n        icon: String(data.condition?.icon) || null,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nfunction getResponseErrorMessage(response) {\r\n  return response.data?.error?.message;\r\n}\r\n\r\nfunction handleApiError(error) {\r\n  if (error.response) {\r\n    return forecastError(getResponseErrorMessage(error.response));\r\n  } else if (error.request) {\r\n    return forecastError(error.request.statusText);\r\n  } else {\r\n    return forecastError(error.message);\r\n  }\r\n}\r\n\r\nfunction handleForecastResponse(response, date) {\r\n  const forecasts = response?.data?.forecast?.forecastday;\r\n  if (!Array.isArray(forecasts)) return forecastEmpty();\r\n\r\n  const forecast = forecasts.find((forecast) => forecast?.date === date);\r\n  if (!forecast?.day) return forecastEmpty();\r\n\r\n  return forecastSuccess(forecast.day);\r\n}\r\n\r\n/**\r\n * Returns the forecast for the city.\r\n * If the date is invalid, in the past, or past 10 days from now: the returned value will be `null`.\r\n * @param {string} city The name of the city to query the forecast for.\r\n * @param {string} dateString The date string to query the forecast for. Expected format: `yyyy-MM-dd`.\r\n */\r\nexport async function getCityForecastForDate(city, dateString) {\r\n  const dateTime = DateTime.fromFormat(dateString, DATE_FORMAT).startOf('day');\r\n  if (!dateTime.isValid) return forecastEmpty();\r\n\r\n  const diff = dateTime.diff(DateTime.local().startOf('day'), 'days').days;\r\n  if (diff > MAX_DAYS_FOR_FORECAST || diff < 0) return forecastEmpty();\r\n\r\n  try {\r\n    const response = await forecastAxiosClient.get('forecast.json', {\r\n      params: {\r\n        key: FORECAST_API_KEY,\r\n        q: city,\r\n        days: Math.ceil(diff) + 1,\r\n      },\r\n    });\r\n    return handleForecastResponse(response, dateString);\r\n  } catch (error) {\r\n    return axios.isCancel(error) ? forecastEmpty() : handleApiError(error);\r\n  }\r\n}\r\n","import { call, cancel, delay, fork, put, race, take } from 'redux-saga/effects';\r\nimport * as forecastUIActions from '../../actions/ui/forecast';\r\nimport * as forecastApi from '../../infra/api/forecast';\r\n\r\nexport function* raceWithResetForecast(effect) {\r\n  return yield race({\r\n    result: effect,\r\n    reset: take(forecastUIActions.RESET_FORECAST),\r\n  });\r\n}\r\n\r\nexport function* getForecast(action) {\r\n  const { result, reset } = yield raceWithResetForecast(\r\n    call(\r\n      forecastApi.getCityForecastForDate,\r\n      action.payload.city,\r\n      action.payload.date\r\n    )\r\n  );\r\n  if (!reset) {\r\n    yield put(forecastUIActions.setForecast(result));\r\n  }\r\n}\r\n\r\nexport function* getForecastDebounced(action) {\r\n  const { reset } = yield raceWithResetForecast(delay(1000));\r\n  if (!reset) {\r\n    yield getForecast(action);\r\n  }\r\n}\r\n\r\nexport function* watchGetForecast() {\r\n  let task;\r\n  while (true) {\r\n    const action = yield take(forecastUIActions.GET_FORECAST);\r\n    if (task) {\r\n      yield cancel(task);\r\n    }\r\n    task = yield fork(getForecastDebounced, action);\r\n  }\r\n}\r\n","export function generateUUID() {\r\n  return (\r\n    Math.random().toString(36).substring(2, 15) +\r\n    Math.random().toString(36).substring(2, 15)\r\n  );\r\n}\r\n","import { DateTime } from 'luxon';\r\nimport { apply, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { setDateReminder } from '../../actions/dates';\r\nimport { setReminder } from '../../actions/reminders';\r\nimport * as reminderUIActions from '../../actions/ui/reminder';\r\nimport { dateTimeStringsToMillis, DATE_FORMAT } from '../../helpers/calendar';\r\nimport { DEFAULT_COLOR } from '../../helpers/colors';\r\nimport { generateUUID } from '../../helpers/uuid';\r\n\r\nexport function* openReminder(reminder) {\r\n  yield put(reminderUIActions.openReminder(reminder));\r\n}\r\n\r\nexport function* newReminder(action) {\r\n  const initialDate = action.payload;\r\n  let initialDateTime = yield apply(DateTime, 'local');\r\n\r\n  if (initialDate) {\r\n    const parsed = DateTime.fromFormat(initialDate, DATE_FORMAT);\r\n    if (parsed.isValid) {\r\n      initialDateTime = initialDateTime.set({\r\n        year: parsed.year,\r\n        month: parsed.month,\r\n        day: parsed.day,\r\n      });\r\n    }\r\n  }\r\n\r\n  const initialColor = DEFAULT_COLOR;\r\n\r\n  const reminder = {\r\n    id: null,\r\n    description: '',\r\n    color: initialColor,\r\n    dateTime: initialDateTime.toMillis(),\r\n    city: '',\r\n  };\r\n\r\n  yield call(openReminder, reminder);\r\n}\r\n\r\nexport function* editReminder(action) {\r\n  yield call(openReminder, action.payload);\r\n}\r\n\r\nexport function* submitReminder(action) {\r\n  const reminder = action.payload;\r\n  let id = reminder.id;\r\n  if (!id) {\r\n    // It is a new reminder, create an id for it since we don't have a backend.\r\n    id = yield call(generateUUID);\r\n  }\r\n\r\n  const reminderToSet = {\r\n    id,\r\n    description: reminder.description,\r\n    color: reminder.color,\r\n    dateTime: dateTimeStringsToMillis(reminder.date, reminder.time),\r\n    city: reminder.city,\r\n  };\r\n\r\n  const dateReminder = { date: reminder.date, reminderId: reminderToSet.id };\r\n\r\n  // TODO: Save do IDB (with dexie)\r\n\r\n  yield put(setReminder(reminderToSet));\r\n  yield put(setDateReminder(dateReminder));\r\n\r\n  yield put(reminderUIActions.closeReminder());\r\n}\r\n\r\nexport function* watchNewReminder() {\r\n  yield takeEvery(reminderUIActions.NEW_REMINDER, newReminder);\r\n}\r\n\r\nexport function* watchEditReminder() {\r\n  yield takeEvery(reminderUIActions.EDIT_REMINDER, editReminder);\r\n}\r\n\r\nexport function* watchSubmitReminder() {\r\n  yield takeEvery(reminderUIActions.SUBMIT_REMINDER, submitReminder);\r\n}\r\n","import { all, call, spawn } from 'redux-saga/effects';\r\nimport { IS_PRODUCTION } from '../config/env';\r\nimport { watchAndLog } from './logger';\r\nimport { watchGetForecast } from './ui/forecast';\r\nimport {\r\n  watchEditReminder,\r\n  watchNewReminder,\r\n  watchSubmitReminder,\r\n} from './ui/reminder';\r\n\r\n/**\r\n * Spawns given sagas, restarting them if they throw any uncaught error.\r\n * @param  {...GeneratorFunction} sagas The sagas to spawn and keep alive\r\n */\r\nfunction* keepAlive(...sagas) {\r\n  yield all(\r\n    sagas.map((saga) =>\r\n      spawn(function* () {\r\n        while (true) {\r\n          try {\r\n            // Start the worker saga\r\n            yield call(saga);\r\n            // If it finishes, exit\r\n            break;\r\n          } catch (e) {\r\n            // If an error happens it will be logged\r\n            // and the loop will restart the saga\r\n            console.groupCollapsed(\r\n              `%cSaga ${saga.name} crashed and will be restarted...`,\r\n              `\r\n                font-size: 600;\r\n                color: #DC2626;\r\n                background-color: #FECACA;\r\n                padding: 0.125rem 0.25rem;\r\n                border-radius: 0.125rem;\r\n              `\r\n            );\r\n            console.error(e);\r\n            console.groupEnd();\r\n          }\r\n        }\r\n      })\r\n    )\r\n  );\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  const sagas = [\r\n    watchNewReminder,\r\n    watchEditReminder,\r\n    watchSubmitReminder,\r\n    watchGetForecast,\r\n  ];\r\n  if (!IS_PRODUCTION) {\r\n    sagas.unshift(watchAndLog);\r\n  }\r\n\r\n  yield keepAlive(...sagas);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport reducers from './reducers';\r\nimport rootSaga from './sagas';\r\nimport './css/index.css';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}